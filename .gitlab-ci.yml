image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


cache:
  paths:
    - .cache/pip
    - tests_output
    - venv


before_script:
  - python --version
  # install git for scm_toolkit versionning
  - apt-get -qq update && apt-get -qq install -y git
  # provide credentials to pip to access repositories on the Huawei GitLab
  - echo "machine rnd-gitlab-eu.huawei.com" > ~/.netrc
  - echo "login gitlab-ci-token" >> ~/.netrc
  - echo "password ${CI_JOB_TOKEN}" >> ~/.netrc

after_script:
  - ls -a


build:
  stage: build
  script:
    - python -m venv venv
    - source venv/bin/activate
    # Redirect pip to the Huawei mirror
    - pip config set global.index-url http://mirrors.tools.huawei.com/pypi/simple
    - pip config set global.trusted-host "mirrors.tools.huawei.com rnd-gitlab-eu.huawei.com pypi.org files.pythonhosted.org"
    - pip install -e .[dev]
  artifacts:
    paths:
      - venv


pytest-coverage:
    stage: test
    script:
        - source venv/bin/activate
        - python -m pytest -v --cov --cov-report=xml:coverage.xml --cov-report=term --cov-report=xml:coverage.xml --junitxml=report.xml tests
    coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
    artifacts:
        when: always
        paths:
        - tests_output/
        reports:
          coverage_report:
            coverage_format: cobertura
            path: coverage.xml
          junit: report.xml
        expire_in: 2 weeks


pages:
  stage: deploy
  publish: ./docs/_build/html
  script:
    - source venv/bin/activate
    - pip install -e .[doc]
    - python docs/reformat.py
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - ./docs/_build/html
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
