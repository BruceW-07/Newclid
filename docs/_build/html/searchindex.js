Search.setIndex({"alltitles": {"About AlphaGeometry": [[0, "about-alphageometry"]], "Adding new problems": [[1, null]], "Adding new rules": [[2, null]], "Agent": [[9, null]], "Agents interface": [[10, null]], "Algebraic manipulator": [[15, null]], "Algebraic reasoning": [[14, null]], "Angles": [[32, null]], "Api": [[17, null]], "Breadth first search": [[11, null]], "Check": [[33, null]], "Circumcenter": [[40, null]], "Clause": [[25, null]], "Collinearity": [[41, null]], "Configs": [[18, null]], "Congruence": [[42, null]], "Constant angle": [[43, null]], "Constant length": [[44, null]], "Constant ratio": [[45, null]], "Contents:": [[0, null], [4, null]], "Contributing": [[0, "contributing"]], "Cyclic": [[46, null]], "Deductive Agent": [[6, "deductive-agent"]], "Default Files": [[4, null]], "Definition": [[26, null]], "Definitions": [[3, null]], "Dependencies": [[19, null]], "Dependency": [[20, null]], "Dependency graph": [[21, null]], "Different": [[47, null]], "Distances": [[34, null]], "Documentation": [[0, "documentation"]], "Draw figure": [[35, null]], "Ensuring the problem can be built": [[1, "ensuring-the-problem-can-be-built"]], "Equal angles": [[48, null]], "Equal ratios": [[49, null]], "Flemmard": [[12, null]], "Formulations": [[24, null]], "From source": [[0, "from-source"]], "GeoSolver: Symbolic solver for Geometric problems": [[0, null]], "Geometries": [[36, null]], "Geosolver": [[8, null]], "How is a Problem Built": [[6, "how-is-a-problem-built"]], "Human agent": [[13, null]], "Indices and tables": [[0, "indices-and-tables"]], "Installation": [[0, "installation"]], "Legacy definitions": [[3, "legacy-definitions"]], "Legacy rules": [[5, "legacy-rules"]], "Load geogebra": [[29, null]], "Match theorems": [[30, null]], "Midpoint": [[50, null]], "New Definitions": [[3, "new-definitions"]], "New rules": [[5, "new-rules"]], "Numerical": [[31, null]], "Overview": [[6, null]], "Parallelism": [[51, null]], "Perpendicularity": [[52, null]], "Predicate": [[53, null]], "Predicates": [[38, null]], "Problem": [[27, null]], "Proof": [[58, null]], "Proof State": [[6, "proof-state"]], "Proof writing": [[59, null]], "Pythagoras": [[39, null]], "Python interface": [[7, null]], "Quickstart": [[0, "quickstart"]], "Rule": [[28, null]], "Rules": [[5, null]], "Run loop": [[60, null]], "Sameclock": [[54, null]], "Sameside": [[55, null]], "Sketch": [[37, null]], "Statement": [[61, null]], "Symbols": [[22, null]], "Symbols graph": [[23, null]], "Tables": [[16, null]], "Tools": [[62, null]], "Translating to natural language": [[6, "translating-to-natural-language"]], "Triangles congruent": [[56, null]], "Triangles similar": [[57, null]], "Using definitions": [[1, "using-definitions"]], "Using pip": [[0, "using-pip"]], "Writing a new problem": [[1, "writing-a-new-problem"]], "Writing the Proof": [[6, "writing-the-proof"]], "angle_bisector x a b c": [[3, "angle-bisector-x-a-b-c"]], "angle_mirror x a b c": [[3, "angle-mirror-x-a-b-c"]], "circle x a b c": [[3, "circle-x-a-b-c"]], "circumcenter x a b c": [[3, "circumcenter-x-a-b-c"]], "eq_quadrangle a b c d": [[3, "eq-quadrangle-a-b-c-d"]], "eq_triangle x b c": [[3, "eq-triangle-x-b-c"]], "eqangle2 x a b c": [[3, "eqangle2-x-a-b-c"]], "eqdia_quadrangle a b c d": [[3, "eqdia-quadrangle-a-b-c-d"]], "eqdistance x a b c": [[3, "eqdistance-x-a-b-c"]], "excenter x a b c": [[3, "excenter-x-a-b-c"]], "excenter2 x y z i a b c": [[3, "excenter2-x-y-z-i-a-b-c"]], "foot x a b c": [[3, "foot-x-a-b-c"]], "free a": [[3, "free-a"]], "incenter x a b c": [[3, "incenter-x-a-b-c"]], "incenter2 x y z i a b c": [[3, "incenter2-x-y-z-i-a-b-c"]], "intersection_cc x o w a": [[3, "intersection-cc-x-o-w-a"]], "intersection_lc x a o b": [[3, "intersection-lc-x-a-o-b"]], "intersection_ll x a b c d": [[3, "intersection-ll-x-a-b-c-d"]], "intersection_lp x a b c m n": [[3, "intersection-lp-x-a-b-c-m-n"]], "intersection_lt x a b c d e": [[3, "intersection-lt-x-a-b-c-d-e"]], "iso_trapezoid a b c d": [[3, "iso-trapezoid-a-b-c-d"]], "r00 : Perpendiculars give parallel": [[5, "r00-perpendiculars-give-parallel"]], "r01 : Definition of circle": [[5, "r01-definition-of-circle"]], "r02 : eqangle2para": [[5, "r02-eqangle2para"]], "r03 : cyclic2eqangle": [[5, "r03-cyclic2eqangle"]], "r04 : eqangle2cyclic": [[5, "r04-eqangle2cyclic"]], "r05 : eqangle_on_circle2cong": [[5, "r05-eqangle-on-circle2cong"]], "r06 : Base of half triangle": [[5, "r06-base-of-half-triangle"]], "r07 : para2eqratio3": [[5, "r07-para2eqratio3"]], "r08 : perp_perp2eqangle": [[5, "r08-perp-perp2eqangle"]], "r09 : Sum of angles of a triangle": [[5, "r09-sum-of-angles-of-a-triangle"]], "r10 : Ratio cancellation": [[5, "r10-ratio-cancellation"]], "r11 : eqratio2angle_bisector": [[5, "r11-eqratio2angle-bisector"]], "r12 : Bisector theorem": [[5, "r12-bisector-theorem"]], "r13 : Isosceles triangle equal angles": [[5, "r13-isosceles-triangle-equal-angles"]], "r14 : Equal base angles imply isosceles": [[5, "r14-equal-base-angles-imply-isosceles"]], "r15 : circle_perp2eqangle": [[5, "r15-circle-perp2eqangle"]], "r16 : circle_eqangle2perp": [[5, "r16-circle-eqangle2perp"]], "r17 : circle_midp2eqangle": [[5, "r17-circle-midp2eqangle"]], "r18 : eqangle2midp": [[5, "r18-eqangle2midp"]], "r19 : Hypothenuse is diameter": [[5, "r19-hypothenuse-is-diameter"]], "r20 : Diameter is hypotenuse": [[5, "r20-diameter-is-hypotenuse"]], "r21 : cyclic_para2eqangle": [[5, "r21-cyclic-para2eqangle"]], "r22 : Bisector Construction": [[5, "r22-bisector-construction"]], "r23 : Bisector is perpendicular": [[5, "r23-bisector-is-perpendicular"]], "r24 : cong_cyclic2perp": [[5, "r24-cong-cyclic2perp"]], "r25 : midp2para": [[5, "r25-midp2para"]], "r26 : Diagonals of parallelogram": [[5, "r26-diagonals-of-parallelogram"]], "r27 : eqratio_sameside2para": [[5, "r27-eqratio-sameside2para"]], "r28 : para2coll": [[5, "r28-para2coll"]], "r29 : midp2eqratio": [[5, "r29-midp2eqratio"]], "r30 : eqangle_perp2perp": [[5, "r30-eqangle-perp2perp"]], "r31 : eqratio_cong2cong": [[5, "r31-eqratio-cong2cong"]], "r32 : cong_cong2contri": [[5, "r32-cong-cong2contri"]], "r33 : cong_eqangle2contri": [[5, "r33-cong-eqangle2contri"]], "r34 : eqangle2simtri": [[5, "r34-eqangle2simtri"]], "r35 : eqangle2simtri2": [[5, "r35-eqangle2simtri2"]], "r36 : eqangle_cong2contri": [[5, "r36-eqangle-cong2contri"]], "r37 : eqangle_cong2contri": [[5, "r37-eqangle-cong2contri"]], "r38 : eqratio_eqangle2simtri": [[5, "r38-eqratio-eqangle2simtri"]], "r39 : eqratio_eqangle2simtri": [[5, "r39-eqratio-eqangle2simtri"]], "r40 : eqratio_eqratio_cong2contri": [[5, "r40-eqratio-eqratio-cong2contri"]], "r41 : para2eqratio": [[5, "r41-para2eqratio"]], "r42 : eqratio62para": [[5, "r42-eqratio62para"]], "r43 : Orthocenter theorem": [[5, "r43-orthocenter-theorem"]], "r44 : Pappus\u2019s theorem": [[5, "r44-pappus-s-theorem"]], "r45 : Simson line theorem": [[5, "r45-simson-line-theorem"]], "r46 : Incenter theorem": [[5, "r46-incenter-theorem"]], "r47 : Circumcenter theorem": [[5, "r47-circumcenter-theorem"]], "r48 : Centroid theorem": [[5, "r48-centroid-theorem"]], "r49 : Recognize center of cyclic (circle)": [[5, "r49-recognize-center-of-cyclic-circle"]], "r50 : Recognize center of cyclic (cong)": [[5, "r50-recognize-center-of-cyclic-cong"]], "r51 : Midpoint splits in two": [[5, "r51-midpoint-splits-in-two"]]}, "docnames": ["index", "manual/adding_problems", "manual/adding_rules", "manual/default_files/definitions", "manual/default_files/index", "manual/default_files/rules", "manual/overview", "manual/python_interface", "source/geosolver", "source/geosolver.agent", "source/geosolver.agent.agents_interface", "source/geosolver.agent.breadth_first_search", "source/geosolver.agent.flemmard", "source/geosolver.agent.human_agent", "source/geosolver.algebraic_reasoning", "source/geosolver.algebraic_reasoning.algebraic_manipulator", "source/geosolver.algebraic_reasoning.tables", "source/geosolver.api", "source/geosolver.configs", "source/geosolver.dependencies", "source/geosolver.dependencies.dependency", "source/geosolver.dependencies.dependency_graph", "source/geosolver.dependencies.symbols", "source/geosolver.dependencies.symbols_graph", "source/geosolver.formulations", "source/geosolver.formulations.clause", "source/geosolver.formulations.definition", "source/geosolver.formulations.problem", "source/geosolver.formulations.rule", "source/geosolver.load_geogebra", "source/geosolver.match_theorems", "source/geosolver.numerical", "source/geosolver.numerical.angles", "source/geosolver.numerical.check", "source/geosolver.numerical.distances", "source/geosolver.numerical.draw_figure", "source/geosolver.numerical.geometries", "source/geosolver.numerical.sketch", "source/geosolver.predicates", "source/geosolver.predicates.Pythagoras", "source/geosolver.predicates.circumcenter", "source/geosolver.predicates.collinearity", "source/geosolver.predicates.congruence", "source/geosolver.predicates.constant_angle", "source/geosolver.predicates.constant_length", "source/geosolver.predicates.constant_ratio", "source/geosolver.predicates.cyclic", "source/geosolver.predicates.different", "source/geosolver.predicates.equal_angles", "source/geosolver.predicates.equal_ratios", "source/geosolver.predicates.midpoint", "source/geosolver.predicates.parallelism", "source/geosolver.predicates.perpendicularity", "source/geosolver.predicates.predicate", "source/geosolver.predicates.sameclock", "source/geosolver.predicates.sameside", "source/geosolver.predicates.triangles_congruent", "source/geosolver.predicates.triangles_similar", "source/geosolver.proof", "source/geosolver.proof_writing", "source/geosolver.run_loop", "source/geosolver.statement", "source/geosolver.tools"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["index.rst", "manual/adding_problems.rst", "manual/adding_rules.rst", "manual/default_files/definitions.rst", "manual/default_files/index.rst", "manual/default_files/rules.rst", "manual/overview.rst", "manual/python_interface.rst", "source/geosolver.rst", "source/geosolver.agent.rst", "source/geosolver.agent.agents_interface.rst", "source/geosolver.agent.breadth_first_search.rst", "source/geosolver.agent.flemmard.rst", "source/geosolver.agent.human_agent.rst", "source/geosolver.algebraic_reasoning.rst", "source/geosolver.algebraic_reasoning.algebraic_manipulator.rst", "source/geosolver.algebraic_reasoning.tables.rst", "source/geosolver.api.rst", "source/geosolver.configs.rst", "source/geosolver.dependencies.rst", "source/geosolver.dependencies.dependency.rst", "source/geosolver.dependencies.dependency_graph.rst", "source/geosolver.dependencies.symbols.rst", "source/geosolver.dependencies.symbols_graph.rst", "source/geosolver.formulations.rst", "source/geosolver.formulations.clause.rst", "source/geosolver.formulations.definition.rst", "source/geosolver.formulations.problem.rst", "source/geosolver.formulations.rule.rst", "source/geosolver.load_geogebra.rst", "source/geosolver.match_theorems.rst", "source/geosolver.numerical.rst", "source/geosolver.numerical.angles.rst", "source/geosolver.numerical.check.rst", "source/geosolver.numerical.distances.rst", "source/geosolver.numerical.draw_figure.rst", "source/geosolver.numerical.geometries.rst", "source/geosolver.numerical.sketch.rst", "source/geosolver.predicates.rst", "source/geosolver.predicates.Pythagoras.rst", "source/geosolver.predicates.circumcenter.rst", "source/geosolver.predicates.collinearity.rst", "source/geosolver.predicates.congruence.rst", "source/geosolver.predicates.constant_angle.rst", "source/geosolver.predicates.constant_length.rst", "source/geosolver.predicates.constant_ratio.rst", "source/geosolver.predicates.cyclic.rst", "source/geosolver.predicates.different.rst", "source/geosolver.predicates.equal_angles.rst", "source/geosolver.predicates.equal_ratios.rst", "source/geosolver.predicates.midpoint.rst", "source/geosolver.predicates.parallelism.rst", "source/geosolver.predicates.perpendicularity.rst", "source/geosolver.predicates.predicate.rst", "source/geosolver.predicates.sameclock.rst", "source/geosolver.predicates.sameside.rst", "source/geosolver.predicates.triangles_congruent.rst", "source/geosolver.predicates.triangles_similar.rst", "source/geosolver.proof.rst", "source/geosolver.proof_writing.rst", "source/geosolver.run_loop.rst", "source/geosolver.statement.rst", "source/geosolver.tools.rst"], "indexentries": {"acompute (class in geosolver.predicates.constant_angle)": [[43, "geosolver.predicates.constant_angle.ACompute", false]], "add() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.add", false]], "add() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.add", false]], "add() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.add", false]], "add() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.add", false]], "add() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.add", false]], "add() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.add", false]], "add() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.add", false]], "add() (dependency method)": [[20, "geosolver.dependencies.dependency.Dependency.add", false]], "add() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.add", false]], "add() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.add", false]], "add() (eqratio3 class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.add", false]], "add() (para class method)": [[51, "geosolver.predicates.parallelism.Para.add", false]], "add() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.add", false]], "add() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.add", false]], "add() (pythagoreanconclusions class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions.add", false]], "add() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.add", false]], "add_construction() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.add_construction", false]], "add_construction() (proofstate method)": [[58, "geosolver.proof.ProofState.add_construction", false]], "add_expr() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.add_expr", false]], "add_free() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.add_free", false]], "algebraicmanipulator (class in geosolver.algebraic_reasoning.algebraic_manipulator)": [[15, "geosolver.algebraic_reasoning.algebraic_manipulator.AlgebraicManipulator", false]], "ang_between() (in module geosolver.numerical.angles)": [[32, "geosolver.numerical.angles.ang_between", false]], "ang_of() (in module geosolver.numerical.angles)": [[32, "geosolver.numerical.angles.ang_of", false]], "angle() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.angle", false]], "angle() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.angle", false]], "apply_dep() (proofstate method)": [[58, "geosolver.proof.ProofState.apply_dep", false]], "atomize() (in module geosolver.tools)": [[62, "geosolver.tools.atomize", false]], "basics (definitionjgex attribute)": [[26, "geosolver.formulations.definition.DefinitionJGEX.basics", false]], "bfsddar (class in geosolver.agent.breadth_first_search)": [[11, "geosolver.agent.breadth_first_search.BFSDDAR", false]], "build() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.build", false]], "build_problemjgex() (proofstate class method)": [[58, "geosolver.proof.ProofState.build_problemJGEX", false]], "cache_theorem() (matcher method)": [[30, "geosolver.match_theorems.Matcher.cache_theorem", false]], "check() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.check", false]], "check() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.check", false]], "check() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.check", false]], "check() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.check", false]], "check() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.check", false]], "check() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.check", false]], "check() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.check", false]], "check() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.check", false]], "check() (diff class method)": [[47, "geosolver.predicates.different.Diff.check", false]], "check() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.check", false]], "check() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.check", false]], "check() (eqratio3 class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.check", false]], "check() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.check", false]], "check() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.check", false]], "check() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.check", false]], "check() (npara class method)": [[51, "geosolver.predicates.parallelism.NPara.check", false]], "check() (nperp class method)": [[52, "geosolver.predicates.perpendicularity.NPerp.check", false]], "check() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.check", false]], "check() (para class method)": [[51, "geosolver.predicates.parallelism.Para.check", false]], "check() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.check", false]], "check() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.check", false]], "check() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.check", false]], "check() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.check", false]], "check() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.check", false]], "check() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.check", false]], "check() (statement method)": [[61, "geosolver.statement.Statement.check", false]], "check_coll() (line class method)": [[22, "geosolver.dependencies.symbols.Line.check_coll", false]], "check_cyclic() (circle class method)": [[22, "geosolver.dependencies.symbols.Circle.check_cyclic", false]], "check_goals() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.check_goals", false]], "check_goals() (proofstate method)": [[58, "geosolver.proof.ProofState.check_goals", false]], "check_numerical() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.check_numerical", false]], "check_numerical() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.check_numerical", false]], "check_numerical() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.check_numerical", false]], "check_numerical() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.check_numerical", false]], "check_numerical() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.check_numerical", false]], "check_numerical() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.check_numerical", false]], "check_numerical() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.check_numerical", false]], "check_numerical() (contriclock class method)": [[56, "geosolver.predicates.triangles_congruent.ContriClock.check_numerical", false]], "check_numerical() (contrireflect class method)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect.check_numerical", false]], "check_numerical() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.check_numerical", false]], "check_numerical() (diff class method)": [[47, "geosolver.predicates.different.Diff.check_numerical", false]], "check_numerical() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.check_numerical", false]], "check_numerical() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.check_numerical", false]], "check_numerical() (eqratio3 class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.check_numerical", false]], "check_numerical() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.check_numerical", false]], "check_numerical() (midpoint class method)": [[50, "geosolver.predicates.midpoint.MidPoint.check_numerical", false]], "check_numerical() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.check_numerical", false]], "check_numerical() (npara class method)": [[51, "geosolver.predicates.parallelism.NPara.check_numerical", false]], "check_numerical() (nperp class method)": [[52, "geosolver.predicates.perpendicularity.NPerp.check_numerical", false]], "check_numerical() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.check_numerical", false]], "check_numerical() (para class method)": [[51, "geosolver.predicates.parallelism.Para.check_numerical", false]], "check_numerical() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.check_numerical", false]], "check_numerical() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.check_numerical", false]], "check_numerical() (pythagoreanconclusions class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions.check_numerical", false]], "check_numerical() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.check_numerical", false]], "check_numerical() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.check_numerical", false]], "check_numerical() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.check_numerical", false]], "check_numerical() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.check_numerical", false]], "check_numerical() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.check_numerical", false]], "check_numerical() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.check_numerical", false]], "check_numerical() (statement method)": [[61, "geosolver.statement.Statement.check_numerical", false]], "check_too_close_numerical() (in module geosolver.numerical.distances)": [[34, "geosolver.numerical.distances.check_too_close_numerical", false]], "check_too_far_numerical() (in module geosolver.numerical.distances)": [[34, "geosolver.numerical.distances.check_too_far_numerical", false]], "checked() (dependencygraph method)": [[21, "geosolver.dependencies.dependency_graph.DependencyGraph.checked", false]], "circle (class in geosolver.dependencies.symbols)": [[22, "geosolver.dependencies.symbols.Circle", false]], "circle (form attribute)": [[29, "geosolver.load_geogebra.Form.Circle", false]], "circle_circle_intersection() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.circle_circle_intersection", false]], "circle_segment_intersect() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.circle_segment_intersect", false]], "circlenum (class in geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.CircleNum", false]], "circumcenter (class in geosolver.predicates.circumcenter)": [[40, "geosolver.predicates.circumcenter.Circumcenter", false]], "clause (class in geosolver.formulations.clause)": [[25, "geosolver.formulations.clause.Clause", false]], "clock() (in module geosolver.numerical.check)": [[33, "geosolver.numerical.check.clock", false]], "close_enough() (in module geosolver.numerical)": [[31, "geosolver.numerical.close_enough", false]], "close_enough() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.close_enough", false]], "coll (class in geosolver.predicates.collinearity)": [[41, "geosolver.predicates.collinearity.Coll", false]], "conclusions (rule attribute)": [[28, "geosolver.formulations.rule.Rule.conclusions", false]], "cong (class in geosolver.predicates.congruence)": [[42, "geosolver.predicates.congruence.Cong", false]], "constantangle (class in geosolver.predicates.constant_angle)": [[43, "geosolver.predicates.constant_angle.ConstantAngle", false]], "constantlength (class in geosolver.predicates.constant_length)": [[44, "geosolver.predicates.constant_length.ConstantLength", false]], "constantratio (class in geosolver.predicates.constant_ratio)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio", false]], "constructionerror": [[58, "geosolver.proof.ConstructionError", false]], "constructions (problemjgex attribute)": [[27, "geosolver.formulations.problem.ProblemJGEX.constructions", false]], "container_of() (symbolsgraph method)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph.container_of", false]], "contriclock (class in geosolver.predicates.triangles_congruent)": [[56, "geosolver.predicates.triangles_congruent.ContriClock", false]], "contrireflect (class in geosolver.predicates.triangles_congruent)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect", false]], "cyclic (class in geosolver.predicates.cyclic)": [[46, "geosolver.predicates.cyclic.Cyclic", false]], "declare (definitionjgex attribute)": [[26, "geosolver.formulations.definition.DefinitionJGEX.declare", false]], "deductiveagent (class in geosolver.agent.agents_interface)": [[10, "geosolver.agent.agents_interface.DeductiveAgent", false]], "dedup() (in module geosolver.load_geogebra)": [[29, "geosolver.load_geogebra.dedup", false]], "deduplicate() (pointnum class method)": [[36, "geosolver.numerical.geometries.PointNum.deduplicate", false]], "default_configs_path() (in module geosolver.configs)": [[18, "geosolver.configs.default_configs_path", false]], "default_defs_path() (in module geosolver.configs)": [[18, "geosolver.configs.default_defs_path", false]], "default_rules_path() (in module geosolver.configs)": [[18, "geosolver.configs.default_rules_path", false]], "definitionjgex (class in geosolver.formulations.definition)": [[26, "geosolver.formulations.definition.DefinitionJGEX", false]], "defs (geometricsolverbuilder property)": [[17, "geosolver.api.GeometricSolverBuilder.defs", false]], "del_goals() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.del_goals", false]], "dependency (class in geosolver.dependencies.dependency)": [[20, "geosolver.dependencies.dependency.Dependency", false]], "dependencygraph (class in geosolver.dependencies.dependency_graph)": [[21, "geosolver.dependencies.dependency_graph.DependencyGraph", false]], "descrption (rule attribute)": [[28, "geosolver.formulations.rule.Rule.descrption", false]], "diff (class in geosolver.predicates.different)": [[47, "geosolver.predicates.different.Diff", false]], "diff_side() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.diff_side", false]], "distance() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.distance", false]], "distance() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.distance", false]], "distance2() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.distance2", false]], "dot() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.dot", false]], "draw() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.draw", false]], "draw() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.draw", false]], "draw() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.draw", false]], "draw() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.draw", false]], "draw() (para class method)": [[51, "geosolver.predicates.parallelism.Para.draw", false]], "draw() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.draw", false]], "draw() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.draw", false]], "draw() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.draw", false]], "draw() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.draw", false]], "draw() (statement method)": [[61, "geosolver.statement.Statement.draw", false]], "draw_angle() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_angle", false]], "draw_circle() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_circle", false]], "draw_figure() (geometricsolver method)": [[17, "geosolver.api.GeometricSolver.draw_figure", false]], "draw_figure() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_figure", false]], "draw_line() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_line", false]], "draw_point() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_point", false]], "draw_rectangle() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_rectangle", false]], "draw_segment() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_segment", false]], "draw_segment_num() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.draw_segment_num", false]], "eqangle (class in geosolver.predicates.equal_angles)": [[48, "geosolver.predicates.equal_angles.EqAngle", false]], "eqratio (class in geosolver.predicates.equal_ratios)": [[49, "geosolver.predicates.equal_ratios.EqRatio", false]], "eqratio3 (class in geosolver.predicates.equal_ratios)": [[49, "geosolver.predicates.equal_ratios.EqRatio3", false]], "exhaust_with_bfsddar() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.exhaust_with_bfsddar", false]], "expr_delta() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.expr_delta", false]], "f (namedfunction attribute)": [[13, "geosolver.agent.human_agent.NamedFunction.f", false]], "fill_missing() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.fill_missing", false]], "flemmard (class in geosolver.agent.flemmard)": [[12, "geosolver.agent.flemmard.Flemmard", false]], "flip() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.flip", false]], "fn_match() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.fn_match", false]], "foot() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.foot", false]], "form (class in geosolver.load_geogebra)": [[29, "geosolver.load_geogebra.Form", false]], "formnum (class in geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.FormNum", false]], "fraction_to_angle() (in module geosolver.tools)": [[62, "geosolver.tools.fraction_to_angle", false]], "fraction_to_len() (in module geosolver.tools)": [[62, "geosolver.tools.fraction_to_len", false]], "fraction_to_ratio() (in module geosolver.tools)": [[62, "geosolver.tools.fraction_to_ratio", false]], "from_file() (problemjgex class method)": [[27, "geosolver.formulations.problem.ProblemJGEX.from_file", false]], "from_str() (definitionjgex class method)": [[26, "geosolver.formulations.definition.DefinitionJGEX.from_str", false]], "from_string() (rule class method)": [[28, "geosolver.formulations.rule.Rule.from_string", false]], "from_text() (problemjgex class method)": [[27, "geosolver.formulations.problem.ProblemJGEX.from_text", false]], "from_tokens() (statement class method)": [[61, "geosolver.statement.Statement.from_tokens", false]], "geometricsolver (class in geosolver.api)": [[17, "geosolver.api.GeometricSolver", false]], "geometricsolverbuilder (class in geosolver.api)": [[17, "geosolver.api.GeometricSolverBuilder", false]], "geosolver": [[8, "module-geosolver", false]], "geosolver.agent": [[9, "module-geosolver.agent", false]], "geosolver.agent.agents_interface": [[10, "module-geosolver.agent.agents_interface", false]], "geosolver.agent.breadth_first_search": [[11, "module-geosolver.agent.breadth_first_search", false]], "geosolver.agent.flemmard": [[12, "module-geosolver.agent.flemmard", false]], "geosolver.agent.human_agent": [[13, "module-geosolver.agent.human_agent", false]], "geosolver.algebraic_reasoning": [[14, "module-geosolver.algebraic_reasoning", false]], "geosolver.algebraic_reasoning.algebraic_manipulator": [[15, "module-geosolver.algebraic_reasoning.algebraic_manipulator", false]], "geosolver.algebraic_reasoning.tables": [[16, "module-geosolver.algebraic_reasoning.tables", false]], "geosolver.api": [[17, "module-geosolver.api", false]], "geosolver.configs": [[18, "module-geosolver.configs", false]], "geosolver.dependencies": [[19, "module-geosolver.dependencies", false]], "geosolver.dependencies.dependency": [[20, "module-geosolver.dependencies.dependency", false]], "geosolver.dependencies.dependency_graph": [[21, "module-geosolver.dependencies.dependency_graph", false]], "geosolver.dependencies.symbols": [[22, "module-geosolver.dependencies.symbols", false]], "geosolver.dependencies.symbols_graph": [[23, "module-geosolver.dependencies.symbols_graph", false]], "geosolver.formulations": [[24, "module-geosolver.formulations", false]], "geosolver.formulations.clause": [[25, "module-geosolver.formulations.clause", false]], "geosolver.formulations.definition": [[26, "module-geosolver.formulations.definition", false]], "geosolver.formulations.problem": [[27, "module-geosolver.formulations.problem", false]], "geosolver.formulations.rule": [[28, "module-geosolver.formulations.rule", false]], "geosolver.load_geogebra": [[29, "module-geosolver.load_geogebra", false]], "geosolver.match_theorems": [[30, "module-geosolver.match_theorems", false]], "geosolver.numerical": [[31, "module-geosolver.numerical", false]], "geosolver.numerical.angles": [[32, "module-geosolver.numerical.angles", false]], "geosolver.numerical.check": [[33, "module-geosolver.numerical.check", false]], "geosolver.numerical.distances": [[34, "module-geosolver.numerical.distances", false]], "geosolver.numerical.draw_figure": [[35, "module-geosolver.numerical.draw_figure", false]], "geosolver.numerical.geometries": [[36, "module-geosolver.numerical.geometries", false]], "geosolver.numerical.sketch": [[37, "module-geosolver.numerical.sketch", false]], "geosolver.predicates": [[38, "module-geosolver.predicates", false]], "geosolver.predicates.circumcenter": [[40, "module-geosolver.predicates.circumcenter", false]], "geosolver.predicates.collinearity": [[41, "module-geosolver.predicates.collinearity", false]], "geosolver.predicates.congruence": [[42, "module-geosolver.predicates.congruence", false]], "geosolver.predicates.constant_angle": [[43, "module-geosolver.predicates.constant_angle", false]], "geosolver.predicates.constant_length": [[44, "module-geosolver.predicates.constant_length", false]], "geosolver.predicates.constant_ratio": [[45, "module-geosolver.predicates.constant_ratio", false]], "geosolver.predicates.cyclic": [[46, "module-geosolver.predicates.cyclic", false]], "geosolver.predicates.different": [[47, "module-geosolver.predicates.different", false]], "geosolver.predicates.equal_angles": [[48, "module-geosolver.predicates.equal_angles", false]], "geosolver.predicates.equal_ratios": [[49, "module-geosolver.predicates.equal_ratios", false]], "geosolver.predicates.midpoint": [[50, "module-geosolver.predicates.midpoint", false]], "geosolver.predicates.parallelism": [[51, "module-geosolver.predicates.parallelism", false]], "geosolver.predicates.perpendicularity": [[52, "module-geosolver.predicates.perpendicularity", false]], "geosolver.predicates.predicate": [[53, "module-geosolver.predicates.predicate", false]], "geosolver.predicates.pythagoras": [[39, "module-geosolver.predicates.Pythagoras", false]], "geosolver.predicates.sameclock": [[54, "module-geosolver.predicates.sameclock", false]], "geosolver.predicates.sameside": [[55, "module-geosolver.predicates.sameside", false]], "geosolver.predicates.triangles_congruent": [[56, "module-geosolver.predicates.triangles_congruent", false]], "geosolver.predicates.triangles_similar": [[57, "module-geosolver.predicates.triangles_similar", false]], "geosolver.proof": [[58, "module-geosolver.proof", false]], "geosolver.proof_writing": [[59, "module-geosolver.proof_writing", false]], "geosolver.run_loop": [[60, "module-geosolver.run_loop", false]], "geosolver.statement": [[61, "module-geosolver.statement", false]], "geosolver.tools": [[62, "module-geosolver.tools", false]], "get_eq1() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.get_eq1", false]], "get_eq2() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.get_eq2", false]], "get_eq4() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.get_eq4", false]], "get_length() (table class method)": [[16, "geosolver.algebraic_reasoning.tables.Table.get_length", false]], "get_quotient() (in module geosolver.tools)": [[62, "geosolver.tools.get_quotient", false]], "goals (problemjgex attribute)": [[27, "geosolver.formulations.problem.ProblemJGEX.goals", false]], "has_edge() (dependencygraph method)": [[21, "geosolver.dependencies.dependency_graph.DependencyGraph.has_edge", false]], "head_from() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.head_from", false]], "humanagent (class in geosolver.agent.human_agent)": [[13, "geosolver.agent.human_agent.HumanAgent", false]], "infquotienterror": [[62, "geosolver.tools.InfQuotientError", false]], "init_figure() (in module geosolver.numerical.draw_figure)": [[35, "geosolver.numerical.draw_figure.init_figure", false]], "intersect() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.intersect", false]], "intersect() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.intersect", false]], "invalidintersecterror": [[36, "geosolver.numerical.geometries.InvalidIntersectError", false]], "invalidreduceerror": [[36, "geosolver.numerical.geometries.InvalidReduceError", false]], "is_parallel() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.is_parallel", false]], "is_perp() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.is_perp", false]], "lcompute (class in geosolver.predicates.constant_length)": [[44, "geosolver.predicates.constant_length.LCompute", false]], "line (class in geosolver.dependencies.symbols)": [[22, "geosolver.dependencies.symbols.Line", false]], "line (form attribute)": [[29, "geosolver.load_geogebra.Form.Line", false]], "line_circle_intersection() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.line_circle_intersection", false]], "line_line_intersection() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.line_line_intersection", false]], "line_thru_pair() (symbolsgraph method)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph.line_thru_pair", false]], "linenum (class in geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.LineNum", false]], "load_defs_from_file() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_defs_from_file", false]], "load_defs_from_txt() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_defs_from_txt", false]], "load_geogebra() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_geogebra", false]], "load_geogebra() (in module geosolver.load_geogebra)": [[29, "geosolver.load_geogebra.load_geogebra", false]], "load_goal() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_goal", false]], "load_goals_file() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_goals_file", false]], "load_problem() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_problem", false]], "load_problem_from_file() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_problem_from_file", false]], "load_problem_from_txt() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_problem_from_txt", false]], "load_rules_from_file() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_rules_from_file", false]], "load_rules_from_txt() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.load_rules_from_txt", false]], "make_coll() (line class method)": [[22, "geosolver.dependencies.symbols.Line.make_coll", false]], "make_cyclic() (circle class method)": [[22, "geosolver.dependencies.symbols.Circle.make_cyclic", false]], "match() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.match", false]], "match_theorem() (matcher method)": [[30, "geosolver.match_theorems.Matcher.match_theorem", false]], "match_theorem() (proofstate method)": [[58, "geosolver.proof.ProofState.match_theorem", false]], "matcher (class in geosolver.match_theorems)": [[30, "geosolver.match_theorems.Matcher", false]], "merge() (symbol method)": [[22, "geosolver.dependencies.symbols.Symbol.merge", false]], "midpoint (class in geosolver.predicates.midpoint)": [[50, "geosolver.predicates.midpoint.MidPoint", false]], "minus() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.minus", false]], "mk() (dependency class method)": [[20, "geosolver.dependencies.dependency.Dependency.mk", false]], "module": [[8, "module-geosolver", false], [9, "module-geosolver.agent", false], [10, "module-geosolver.agent.agents_interface", false], [11, "module-geosolver.agent.breadth_first_search", false], [12, "module-geosolver.agent.flemmard", false], [13, "module-geosolver.agent.human_agent", false], [14, "module-geosolver.algebraic_reasoning", false], [15, "module-geosolver.algebraic_reasoning.algebraic_manipulator", false], [16, "module-geosolver.algebraic_reasoning.tables", false], [17, "module-geosolver.api", false], [18, "module-geosolver.configs", false], [19, "module-geosolver.dependencies", false], [20, "module-geosolver.dependencies.dependency", false], [21, "module-geosolver.dependencies.dependency_graph", false], [22, "module-geosolver.dependencies.symbols", false], [23, "module-geosolver.dependencies.symbols_graph", false], [24, "module-geosolver.formulations", false], [25, "module-geosolver.formulations.clause", false], [26, "module-geosolver.formulations.definition", false], [27, "module-geosolver.formulations.problem", false], [28, "module-geosolver.formulations.rule", false], [29, "module-geosolver.load_geogebra", false], [30, "module-geosolver.match_theorems", false], [31, "module-geosolver.numerical", false], [32, "module-geosolver.numerical.angles", false], [33, "module-geosolver.numerical.check", false], [34, "module-geosolver.numerical.distances", false], [35, "module-geosolver.numerical.draw_figure", false], [36, "module-geosolver.numerical.geometries", false], [37, "module-geosolver.numerical.sketch", false], [38, "module-geosolver.predicates", false], [39, "module-geosolver.predicates.Pythagoras", false], [40, "module-geosolver.predicates.circumcenter", false], [41, "module-geosolver.predicates.collinearity", false], [42, "module-geosolver.predicates.congruence", false], [43, "module-geosolver.predicates.constant_angle", false], [44, "module-geosolver.predicates.constant_length", false], [45, "module-geosolver.predicates.constant_ratio", false], [46, "module-geosolver.predicates.cyclic", false], [47, "module-geosolver.predicates.different", false], [48, "module-geosolver.predicates.equal_angles", false], [49, "module-geosolver.predicates.equal_ratios", false], [50, "module-geosolver.predicates.midpoint", false], [51, "module-geosolver.predicates.parallelism", false], [52, "module-geosolver.predicates.perpendicularity", false], [53, "module-geosolver.predicates.predicate", false], [54, "module-geosolver.predicates.sameclock", false], [55, "module-geosolver.predicates.sameside", false], [56, "module-geosolver.predicates.triangles_congruent", false], [57, "module-geosolver.predicates.triangles_similar", false], [58, "module-geosolver.proof", false], [59, "module-geosolver.proof_writing", false], [60, "module-geosolver.run_loop", false], [61, "module-geosolver.statement", false], [62, "module-geosolver.tools", false]], "mult() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.mult", false]], "name (acompute attribute)": [[43, "geosolver.predicates.constant_angle.ACompute.NAME", false]], "name (circumcenter attribute)": [[40, "geosolver.predicates.circumcenter.Circumcenter.NAME", false]], "name (coll attribute)": [[41, "geosolver.predicates.collinearity.Coll.NAME", false]], "name (cong attribute)": [[42, "geosolver.predicates.congruence.Cong.NAME", false]], "name (constantangle attribute)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.NAME", false]], "name (constantlength attribute)": [[44, "geosolver.predicates.constant_length.ConstantLength.NAME", false]], "name (constantratio attribute)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.NAME", false]], "name (contriclock attribute)": [[56, "geosolver.predicates.triangles_congruent.ContriClock.NAME", false]], "name (contrireflect attribute)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect.NAME", false]], "name (cyclic attribute)": [[46, "geosolver.predicates.cyclic.Cyclic.NAME", false]], "name (diff attribute)": [[47, "geosolver.predicates.different.Diff.NAME", false]], "name (eqangle attribute)": [[48, "geosolver.predicates.equal_angles.EqAngle.NAME", false]], "name (eqratio attribute)": [[49, "geosolver.predicates.equal_ratios.EqRatio.NAME", false]], "name (eqratio3 attribute)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.NAME", false]], "name (lcompute attribute)": [[44, "geosolver.predicates.constant_length.LCompute.NAME", false]], "name (midpoint attribute)": [[50, "geosolver.predicates.midpoint.MidPoint.NAME", false]], "name (namedfunction attribute)": [[13, "geosolver.agent.human_agent.NamedFunction.name", false]], "name (ncoll attribute)": [[41, "geosolver.predicates.collinearity.NColl.NAME", false]], "name (npara attribute)": [[51, "geosolver.predicates.parallelism.NPara.NAME", false]], "name (nperp attribute)": [[52, "geosolver.predicates.perpendicularity.NPerp.NAME", false]], "name (nsameside attribute)": [[55, "geosolver.predicates.sameside.NSameSide.NAME", false]], "name (para attribute)": [[51, "geosolver.predicates.parallelism.Para.NAME", false]], "name (perp attribute)": [[52, "geosolver.predicates.perpendicularity.Perp.NAME", false]], "name (predicate attribute)": [[53, "geosolver.predicates.predicate.Predicate.NAME", false]], "name (problemjgex attribute)": [[27, "geosolver.formulations.problem.ProblemJGEX.name", false]], "name (pythagoreanconclusions attribute)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions.NAME", false]], "name (pythagoreanpremises attribute)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.NAME", false]], "name (rcompute attribute)": [[45, "geosolver.predicates.constant_ratio.RCompute.NAME", false]], "name (sameclock attribute)": [[54, "geosolver.predicates.sameclock.SameClock.NAME", false]], "name (sameside attribute)": [[55, "geosolver.predicates.sameside.SameSide.NAME", false]], "name (simtriclock attribute)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.NAME", false]], "name (simtrireflect attribute)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.NAME", false]], "namedfunction (class in geosolver.agent.human_agent)": [[13, "geosolver.agent.human_agent.NamedFunction", false]], "names2points() (symbolsgraph method)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph.names2points", false]], "ncoll (class in geosolver.predicates.collinearity)": [[41, "geosolver.predicates.collinearity.NColl", false]], "nearly_zero() (in module geosolver.numerical)": [[31, "geosolver.numerical.nearly_zero", false]], "new_cache() (proofstate method)": [[58, "geosolver.proof.ProofState.new_cache", false]], "new_node() (symbolsgraph method)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph.new_node", false]], "nodes_of_type() (symbolsgraph method)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph.nodes_of_type", false]], "notnone() (in module geosolver.tools)": [[62, "geosolver.tools.notNone", false]], "npara (class in geosolver.predicates.parallelism)": [[51, "geosolver.predicates.parallelism.NPara", false]], "nperp (class in geosolver.predicates.perpendicularity)": [[52, "geosolver.predicates.perpendicularity.NPerp", false]], "nsameside (class in geosolver.predicates.sameside)": [[55, "geosolver.predicates.sameside.NSameSide", false]], "num (circle attribute)": [[22, "geosolver.dependencies.symbols.Circle.num", false]], "num (line attribute)": [[22, "geosolver.dependencies.symbols.Line.num", false]], "num (point attribute)": [[22, "geosolver.dependencies.symbols.Point.num", false]], "numerics (definitionjgex attribute)": [[26, "geosolver.formulations.definition.DefinitionJGEX.numerics", false]], "para (class in geosolver.predicates.parallelism)": [[51, "geosolver.predicates.parallelism.Para", false]], "parallel_line() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.parallel_line", false]], "parallel_line() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.parallel_line", false]], "parse() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.parse", false]], "parse() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.parse", false]], "parse() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.parse", false]], "parse() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.parse", false]], "parse() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.parse", false]], "parse() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.parse", false]], "parse() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.parse", false]], "parse() (contriclock class method)": [[56, "geosolver.predicates.triangles_congruent.ContriClock.parse", false]], "parse() (contrireflect class method)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect.parse", false]], "parse() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.parse", false]], "parse() (diff class method)": [[47, "geosolver.predicates.different.Diff.parse", false]], "parse() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.parse", false]], "parse() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.parse", false]], "parse() (eqratio3 class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.parse", false]], "parse() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.parse", false]], "parse() (midpoint class method)": [[50, "geosolver.predicates.midpoint.MidPoint.parse", false]], "parse() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.parse", false]], "parse() (npara class method)": [[51, "geosolver.predicates.parallelism.NPara.parse", false]], "parse() (nperp class method)": [[52, "geosolver.predicates.perpendicularity.NPerp.parse", false]], "parse() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.parse", false]], "parse() (para class method)": [[51, "geosolver.predicates.parallelism.Para.parse", false]], "parse() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.parse", false]], "parse() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.parse", false]], "parse() (pythagoreanconclusions class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions.parse", false]], "parse() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.parse", false]], "parse() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.parse", false]], "parse() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.parse", false]], "parse() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.parse", false]], "parse() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.parse", false]], "parse() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.parse", false]], "parse_line() (clause class method)": [[25, "geosolver.formulations.clause.Clause.parse_line", false]], "parse_text() (definitionjgex class method)": [[26, "geosolver.formulations.definition.DefinitionJGEX.parse_text", false]], "parse_text() (rule class method)": [[28, "geosolver.formulations.rule.Rule.parse_text", false]], "parse_txt_file() (definitionjgex class method)": [[26, "geosolver.formulations.definition.DefinitionJGEX.parse_txt_file", false]], "parse_txt_file() (problemjgex class method)": [[27, "geosolver.formulations.problem.ProblemJGEX.parse_txt_file", false]], "parse_txt_file() (rule class method)": [[28, "geosolver.formulations.rule.Rule.parse_txt_file", false]], "perp (class in geosolver.predicates.perpendicularity)": [[52, "geosolver.predicates.perpendicularity.Perp", false]], "perpendicular_bisector() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.perpendicular_bisector", false]], "perpendicular_line() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.perpendicular_line", false]], "perpendicular_line() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.perpendicular_line", false]], "plus() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.plus", false]], "plus_all() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.plus_all", false]], "point (class in geosolver.dependencies.symbols)": [[22, "geosolver.dependencies.symbols.Point", false]], "point_at() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.point_at", false]], "pointnum (class in geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.PointNum", false]], "points (circle attribute)": [[22, "geosolver.dependencies.symbols.Circle.points", false]], "points (clause attribute)": [[25, "geosolver.formulations.clause.Clause.points", false]], "points (line attribute)": [[22, "geosolver.dependencies.symbols.Line.points", false]], "points() (problemjgex method)": [[27, "geosolver.formulations.problem.ProblemJGEX.points", false]], "pointtoocloseerror": [[34, "geosolver.numerical.distances.PointTooCloseError", false]], "pointtoofarerror": [[34, "geosolver.numerical.distances.PointTooFarError", false]], "predicate (class in geosolver.predicates.predicate)": [[53, "geosolver.predicates.predicate.Predicate", false]], "premises (rule attribute)": [[28, "geosolver.formulations.rule.Rule.premises", false]], "premises() (dependencygraph method)": [[21, "geosolver.dependencies.dependency_graph.DependencyGraph.premises", false]], "preparse() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.preparse", false]], "preparse() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.preparse", false]], "preparse() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.preparse", false]], "preparse() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.preparse", false]], "preparse() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.preparse", false]], "preparse() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.preparse", false]], "preparse() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.preparse", false]], "preparse() (contriclock class method)": [[56, "geosolver.predicates.triangles_congruent.ContriClock.preparse", false]], "preparse() (contrireflect class method)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect.preparse", false]], "preparse() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.preparse", false]], "preparse() (diff class method)": [[47, "geosolver.predicates.different.Diff.preparse", false]], "preparse() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.preparse", false]], "preparse() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.preparse", false]], "preparse() (eqratio3 class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio3.preparse", false]], "preparse() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.preparse", false]], "preparse() (midpoint class method)": [[50, "geosolver.predicates.midpoint.MidPoint.preparse", false]], "preparse() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.preparse", false]], "preparse() (npara class method)": [[51, "geosolver.predicates.parallelism.NPara.preparse", false]], "preparse() (nperp class method)": [[52, "geosolver.predicates.perpendicularity.NPerp.preparse", false]], "preparse() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.preparse", false]], "preparse() (para class method)": [[51, "geosolver.predicates.parallelism.Para.preparse", false]], "preparse() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.preparse", false]], "preparse() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.preparse", false]], "preparse() (pythagoreanconclusions class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions.preparse", false]], "preparse() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.preparse", false]], "preparse() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.preparse", false]], "preparse() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.preparse", false]], "preparse() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.preparse", false]], "preparse() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.preparse", false]], "preparse() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.preparse", false]], "pretty() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.pretty", false]], "pretty() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.pretty", false]], "pretty() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.pretty", false]], "pretty() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.pretty", false]], "pretty() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.pretty", false]], "pretty() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.pretty", false]], "pretty() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.pretty", false]], "pretty() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.pretty", false]], "pretty() (dependency method)": [[20, "geosolver.dependencies.dependency.Dependency.pretty", false]], "pretty() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.pretty", false]], "pretty() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.pretty", false]], "pretty() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.pretty", false]], "pretty() (midpoint class method)": [[50, "geosolver.predicates.midpoint.MidPoint.pretty", false]], "pretty() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.pretty", false]], "pretty() (npara class method)": [[51, "geosolver.predicates.parallelism.NPara.pretty", false]], "pretty() (nperp class method)": [[52, "geosolver.predicates.perpendicularity.NPerp.pretty", false]], "pretty() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.pretty", false]], "pretty() (para class method)": [[51, "geosolver.predicates.parallelism.Para.pretty", false]], "pretty() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.pretty", false]], "pretty() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.pretty", false]], "pretty() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.pretty", false]], "pretty() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.pretty", false]], "pretty() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.pretty", false]], "pretty() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.pretty", false]], "pretty() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.pretty", false]], "pretty() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.pretty", false]], "pretty() (statement method)": [[61, "geosolver.statement.Statement.pretty", false]], "pretty_name (point property)": [[22, "geosolver.dependencies.symbols.Point.pretty_name", false]], "problemjgex (class in geosolver.formulations.problem)": [[27, "geosolver.formulations.problem.ProblemJGEX", false]], "proof_deps() (dependencygraph method)": [[21, "geosolver.dependencies.dependency_graph.DependencyGraph.proof_deps", false]], "proofstate (class in geosolver.proof)": [[58, "geosolver.proof.ProofState", false]], "pythagoreanconclusions (class in geosolver.predicates.pythagoras)": [[39, "geosolver.predicates.Pythagoras.PythagoreanConclusions", false]], "pythagoreanpremises (class in geosolver.predicates.pythagoras)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises", false]], "random_points() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.random_points", false]], "random_rfss() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.random_rfss", false]], "rcompute (class in geosolver.predicates.constant_ratio)": [[45, "geosolver.predicates.constant_ratio.RCompute", false]], "reason (dependency attribute)": [[20, "geosolver.dependencies.dependency.Dependency.reason", false]], "recon() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.recon", false]], "reduce() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.reduce", false]], "rely (definitionjgex attribute)": [[26, "geosolver.formulations.definition.DefinitionJGEX.rely", false]], "renamed() (clause method)": [[25, "geosolver.formulations.clause.Clause.renamed", false]], "renamed() (problemjgex method)": [[27, "geosolver.formulations.problem.ProblemJGEX.renamed", false]], "rep() (symbol method)": [[22, "geosolver.dependencies.symbols.Symbol.rep", false]], "replace() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.replace", false]], "replace() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.replace", false]], "report() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.report", false]], "require (definitionjgex attribute)": [[26, "geosolver.formulations.definition.DefinitionJGEX.require", false]], "reshape() (in module geosolver.tools)": [[62, "geosolver.tools.reshape", false]], "rot90() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.rot90", false]], "rotate() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.rotate", false]], "rotatea() (pointnum method)": [[36, "geosolver.numerical.geometries.PointNum.rotatea", false]], "rule (class in geosolver.formulations.rule)": [[28, "geosolver.formulations.rule.Rule", false]], "rules (geometricsolverbuilder property)": [[17, "geosolver.api.GeometricSolverBuilder.rules", false]], "run() (geometricsolver method)": [[17, "geosolver.api.GeometricSolver.run", false]], "run_loop() (in module geosolver.run_loop)": [[60, "geosolver.run_loop.run_loop", false]], "same() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.same", false]], "same_clock() (in module geosolver.numerical.check)": [[33, "geosolver.numerical.check.same_clock", false]], "same_side() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.same_side", false]], "sameclock (class in geosolver.predicates.sameclock)": [[54, "geosolver.predicates.sameclock.SameClock", false]], "sameside (class in geosolver.predicates.sameside)": [[55, "geosolver.predicates.sameside.SameSide", false]], "sample_within() (circlenum method)": [[36, "geosolver.numerical.geometries.CircleNum.sample_within", false]], "sample_within() (formnum method)": [[36, "geosolver.numerical.geometries.FormNum.sample_within", false]], "sample_within() (linenum method)": [[36, "geosolver.numerical.geometries.LineNum.sample_within", false]], "select() (humanagent class method)": [[13, "geosolver.agent.human_agent.HumanAgent.select", false]], "sentences (clause attribute)": [[25, "geosolver.formulations.clause.Clause.sentences", false]], "show_graphics() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.show_graphics", false]], "sign() (in module geosolver.numerical)": [[31, "geosolver.numerical.sign", false]], "simtriclock (class in geosolver.predicates.triangles_similar)": [[57, "geosolver.predicates.triangles_similar.SimtriClock", false]], "simtrireflect (class in geosolver.predicates.triangles_similar)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect", false]], "sketch() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch", false]], "sketch_2l1c() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_2l1c", false]], "sketch_3peq() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_3peq", false]], "sketch_acircle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_acircle", false]], "sketch_aconst() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_aconst", false]], "sketch_aline() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_aline", false]], "sketch_aline0() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_aline0", false]], "sketch_amirror() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_amirror", false]], "sketch_bisect() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_bisect", false]], "sketch_bline() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_bline", false]], "sketch_cc_tangent() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_cc_tangent", false]], "sketch_centroid() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_centroid", false]], "sketch_circle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_circle", false]], "sketch_cyclic() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_cyclic", false]], "sketch_dia() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_dia", false]], "sketch_e5128() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_e5128", false]], "sketch_eq_quadrangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eq_quadrangle", false]], "sketch_eqangle2() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eqangle2", false]], "sketch_eqangle3() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eqangle3", false]], "sketch_eqdia_quadrangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eqdia_quadrangle", false]], "sketch_eqratio() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eqratio", false]], "sketch_eqratio6() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_eqratio6", false]], "sketch_exbisect() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_exbisect", false]], "sketch_excenter2() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_excenter2", false]], "sketch_free() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_free", false]], "sketch_ieq_triangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_ieq_triangle", false]], "sketch_incenter2() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_incenter2", false]], "sketch_iso_trapezoid() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_iso_trapezoid", false]], "sketch_isos() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_isos", false]], "sketch_isosvertex() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_isosvertex", false]], "sketch_isquare() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_isquare", false]], "sketch_lconst() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_lconst", false]], "sketch_line() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_line", false]], "sketch_midp() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_midp", false]], "sketch_ninepoints() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_ninepoints", false]], "sketch_on_opline() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_on_opline", false]], "sketch_pentagon() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_pentagon", false]], "sketch_pline() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_pline", false]], "sketch_pmirror() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_pmirror", false]], "sketch_quadrangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_quadrangle", false]], "sketch_r_trapezoid() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_r_trapezoid", false]], "sketch_r_triangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_r_triangle", false]], "sketch_rconst() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_rconst", false]], "sketch_rconst2() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_rconst2", false]], "sketch_rectangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_rectangle", false]], "sketch_reflect() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_reflect", false]], "sketch_risos() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_risos", false]], "sketch_rotaten90() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_rotaten90", false]], "sketch_rotatep90() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_rotatep90", false]], "sketch_s_angle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_s_angle", false]], "sketch_segment() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_segment", false]], "sketch_shift() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_shift", false]], "sketch_square() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_square", false]], "sketch_tangent() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_tangent", false]], "sketch_tline() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_tline", false]], "sketch_trapezoid() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_trapezoid", false]], "sketch_triangle() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_triangle", false]], "sketch_triangle12() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_triangle12", false]], "sketch_trisect() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_trisect", false]], "sketch_trisegment() (in module geosolver.numerical.sketch)": [[37, "geosolver.numerical.sketch.sketch_trisegment", false]], "solve_quad() (in module geosolver.numerical.geometries)": [[36, "geosolver.numerical.geometries.solve_quad", false]], "statement (class in geosolver.statement)": [[61, "geosolver.statement.Statement", false]], "statement (dependency attribute)": [[20, "geosolver.dependencies.dependency.Dependency.statement", false]], "step() (bfsddar method)": [[11, "geosolver.agent.breadth_first_search.BFSDDAR.step", false]], "step() (deductiveagent method)": [[10, "geosolver.agent.agents_interface.DeductiveAgent.step", false]], "step() (flemmard method)": [[12, "geosolver.agent.flemmard.Flemmard.step", false]], "step() (humanagent method)": [[13, "geosolver.agent.human_agent.HumanAgent.step", false]], "str_to_fraction() (in module geosolver.tools)": [[62, "geosolver.tools.str_to_fraction", false]], "strip() (in module geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.strip", false]], "sumcv_from_list() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.sumcv_from_list", false]], "symbol (class in geosolver.dependencies.symbols)": [[22, "geosolver.dependencies.symbols.Symbol", false]], "symbolsgraph (class in geosolver.dependencies.symbols_graph)": [[23, "geosolver.dependencies.symbols_graph.SymbolsGraph", false]], "table (class in geosolver.algebraic_reasoning.tables)": [[16, "geosolver.algebraic_reasoning.tables.Table", false]], "to_constructive() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.to_constructive", false]], "to_constructive() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.to_constructive", false]], "to_constructive() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.to_constructive", false]], "to_constructive() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.to_constructive", false]], "to_constructive() (para class method)": [[51, "geosolver.predicates.parallelism.Para.to_constructive", false]], "to_constructive() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.to_constructive", false]], "to_constructive() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.to_constructive", false]], "to_dict() (definitionjgex class method)": [[26, "geosolver.formulations.definition.DefinitionJGEX.to_dict", false]], "to_repr() (diff class method)": [[47, "geosolver.predicates.different.Diff.to_repr", false]], "to_repr() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.to_repr", false]], "to_tokens() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.to_tokens", false]], "to_tokens() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.to_tokens", false]], "to_tokens() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.to_tokens", false]], "to_tokens() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.to_tokens", false]], "to_tokens() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.to_tokens", false]], "to_tokens() (contriclock class method)": [[56, "geosolver.predicates.triangles_congruent.ContriClock.to_tokens", false]], "to_tokens() (contrireflect class method)": [[56, "geosolver.predicates.triangles_congruent.ContriReflect.to_tokens", false]], "to_tokens() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.to_tokens", false]], "to_tokens() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.to_tokens", false]], "to_tokens() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.to_tokens", false]], "to_tokens() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.to_tokens", false]], "to_tokens() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.to_tokens", false]], "to_tokens() (simtriclock class method)": [[57, "geosolver.predicates.triangles_similar.SimtriClock.to_tokens", false]], "to_tokens() (simtrireflect class method)": [[57, "geosolver.predicates.triangles_similar.SimtriReflect.to_tokens", false]], "translate_sentence() (in module geosolver.formulations.clause)": [[25, "geosolver.formulations.clause.translate_sentence", false]], "two_triangles() (in module geosolver.predicates.triangles_similar)": [[57, "geosolver.predicates.triangles_similar.two_triangles", false]], "variables() (rule method)": [[28, "geosolver.formulations.rule.Rule.variables", false]], "why (dependency attribute)": [[20, "geosolver.dependencies.dependency.Dependency.why", false]], "why() (acompute class method)": [[43, "geosolver.predicates.constant_angle.ACompute.why", false]], "why() (circumcenter class method)": [[40, "geosolver.predicates.circumcenter.Circumcenter.why", false]], "why() (coll class method)": [[41, "geosolver.predicates.collinearity.Coll.why", false]], "why() (cong class method)": [[42, "geosolver.predicates.congruence.Cong.why", false]], "why() (constantangle class method)": [[43, "geosolver.predicates.constant_angle.ConstantAngle.why", false]], "why() (constantlength class method)": [[44, "geosolver.predicates.constant_length.ConstantLength.why", false]], "why() (constantratio class method)": [[45, "geosolver.predicates.constant_ratio.ConstantRatio.why", false]], "why() (cyclic class method)": [[46, "geosolver.predicates.cyclic.Cyclic.why", false]], "why() (diff class method)": [[47, "geosolver.predicates.different.Diff.why", false]], "why() (eqangle class method)": [[48, "geosolver.predicates.equal_angles.EqAngle.why", false]], "why() (eqratio class method)": [[49, "geosolver.predicates.equal_ratios.EqRatio.why", false]], "why() (lcompute class method)": [[44, "geosolver.predicates.constant_length.LCompute.why", false]], "why() (ncoll class method)": [[41, "geosolver.predicates.collinearity.NColl.why", false]], "why() (nsameside class method)": [[55, "geosolver.predicates.sameside.NSameSide.why", false]], "why() (para class method)": [[51, "geosolver.predicates.parallelism.Para.why", false]], "why() (perp class method)": [[52, "geosolver.predicates.perpendicularity.Perp.why", false]], "why() (predicate class method)": [[53, "geosolver.predicates.predicate.Predicate.why", false]], "why() (pythagoreanpremises class method)": [[39, "geosolver.predicates.Pythagoras.PythagoreanPremises.why", false]], "why() (rcompute class method)": [[45, "geosolver.predicates.constant_ratio.RCompute.why", false]], "why() (sameclock class method)": [[54, "geosolver.predicates.sameclock.SameClock.why", false]], "why() (sameside class method)": [[55, "geosolver.predicates.sameside.SameSide.why", false]], "why() (statement method)": [[61, "geosolver.statement.Statement.why", false]], "why() (table method)": [[16, "geosolver.algebraic_reasoning.tables.Table.why", false]], "why_coll() (line class method)": [[22, "geosolver.dependencies.symbols.Line.why_coll", false]], "why_cyclic() (circle class method)": [[22, "geosolver.dependencies.symbols.Circle.why_cyclic", false]], "with_deductive_agent() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.with_deductive_agent", false]], "with_more_construction() (problemjgex method)": [[27, "geosolver.formulations.problem.ProblemJGEX.with_more_construction", false]], "with_new() (dependency method)": [[20, "geosolver.dependencies.dependency.Dependency.with_new", false]], "with_new() (statement method)": [[61, "geosolver.statement.Statement.with_new", false]], "with_runtime_cache() (geometricsolverbuilder method)": [[17, "geosolver.api.GeometricSolverBuilder.with_runtime_cache", false]], "write_all_outputs() (geometricsolver method)": [[17, "geosolver.api.GeometricSolver.write_all_outputs", false]], "write_proof_steps() (geometricsolver method)": [[17, "geosolver.api.GeometricSolver.write_proof_steps", false]], "write_proof_steps() (in module geosolver.proof_writing)": [[59, "geosolver.proof_writing.write_proof_steps", false]], "write_run_infos() (geometricsolver method)": [[17, "geosolver.api.GeometricSolver.write_run_infos", false]]}, "objects": {"": [[8, 0, 0, "-", "geosolver"]], "geosolver": [[9, 0, 0, "-", "agent"], [14, 0, 0, "-", "algebraic_reasoning"], [17, 0, 0, "-", "api"], [18, 0, 0, "-", "configs"], [19, 0, 0, "-", "dependencies"], [24, 0, 0, "-", "formulations"], [29, 0, 0, "-", "load_geogebra"], [30, 0, 0, "-", "match_theorems"], [31, 0, 0, "-", "numerical"], [38, 0, 0, "-", "predicates"], [58, 0, 0, "-", "proof"], [59, 0, 0, "-", "proof_writing"], [60, 0, 0, "-", "run_loop"], [61, 0, 0, "-", "statement"], [62, 0, 0, "-", "tools"]], "geosolver.agent": [[10, 0, 0, "-", "agents_interface"], [11, 0, 0, "-", "breadth_first_search"], [12, 0, 0, "-", "flemmard"], [13, 0, 0, "-", "human_agent"]], "geosolver.agent.agents_interface": [[10, 1, 1, "", "DeductiveAgent"]], "geosolver.agent.agents_interface.DeductiveAgent": [[10, 2, 1, "", "step"]], "geosolver.agent.breadth_first_search": [[11, 1, 1, "", "BFSDDAR"]], "geosolver.agent.breadth_first_search.BFSDDAR": [[11, 2, 1, "", "step"]], "geosolver.agent.flemmard": [[12, 1, 1, "", "Flemmard"]], "geosolver.agent.flemmard.Flemmard": [[12, 2, 1, "", "step"]], "geosolver.agent.human_agent": [[13, 1, 1, "", "HumanAgent"], [13, 1, 1, "", "NamedFunction"]], "geosolver.agent.human_agent.HumanAgent": [[13, 2, 1, "", "add_construction"], [13, 2, 1, "", "check"], [13, 2, 1, "", "check_goals"], [13, 2, 1, "", "exhaust_with_bfsddar"], [13, 2, 1, "", "fn_match"], [13, 2, 1, "", "match"], [13, 2, 1, "", "select"], [13, 2, 1, "", "show_graphics"], [13, 2, 1, "", "step"]], "geosolver.agent.human_agent.NamedFunction": [[13, 3, 1, "", "f"], [13, 3, 1, "", "name"]], "geosolver.algebraic_reasoning": [[15, 0, 0, "-", "algebraic_manipulator"], [16, 0, 0, "-", "tables"]], "geosolver.algebraic_reasoning.algebraic_manipulator": [[15, 1, 1, "", "AlgebraicManipulator"]], "geosolver.algebraic_reasoning.tables": [[16, 1, 1, "", "Table"], [16, 4, 1, "", "minus"], [16, 4, 1, "", "mult"], [16, 4, 1, "", "plus"], [16, 4, 1, "", "plus_all"], [16, 4, 1, "", "recon"], [16, 4, 1, "", "replace"], [16, 4, 1, "", "report"], [16, 4, 1, "", "strip"]], "geosolver.algebraic_reasoning.tables.Table": [[16, 2, 1, "", "add_expr"], [16, 2, 1, "", "add_free"], [16, 2, 1, "", "expr_delta"], [16, 2, 1, "", "get_eq1"], [16, 2, 1, "", "get_eq2"], [16, 2, 1, "", "get_eq4"], [16, 2, 1, "", "get_length"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "sumcv_from_list"], [16, 2, 1, "", "why"]], "geosolver.api": [[17, 1, 1, "", "GeometricSolver"], [17, 1, 1, "", "GeometricSolverBuilder"]], "geosolver.api.GeometricSolver": [[17, 2, 1, "", "draw_figure"], [17, 2, 1, "", "run"], [17, 2, 1, "", "write_all_outputs"], [17, 2, 1, "", "write_proof_steps"], [17, 2, 1, "", "write_run_infos"]], "geosolver.api.GeometricSolverBuilder": [[17, 2, 1, "", "build"], [17, 5, 1, "", "defs"], [17, 2, 1, "", "del_goals"], [17, 2, 1, "", "load_defs_from_file"], [17, 2, 1, "", "load_defs_from_txt"], [17, 2, 1, "", "load_geogebra"], [17, 2, 1, "", "load_goal"], [17, 2, 1, "", "load_goals_file"], [17, 2, 1, "", "load_problem"], [17, 2, 1, "", "load_problem_from_file"], [17, 2, 1, "", "load_problem_from_txt"], [17, 2, 1, "", "load_rules_from_file"], [17, 2, 1, "", "load_rules_from_txt"], [17, 5, 1, "", "rules"], [17, 2, 1, "", "with_deductive_agent"], [17, 2, 1, "", "with_runtime_cache"]], "geosolver.configs": [[18, 4, 1, "", "default_configs_path"], [18, 4, 1, "", "default_defs_path"], [18, 4, 1, "", "default_rules_path"]], "geosolver.dependencies": [[20, 0, 0, "-", "dependency"], [21, 0, 0, "-", "dependency_graph"], [22, 0, 0, "-", "symbols"], [23, 0, 0, "-", "symbols_graph"]], "geosolver.dependencies.dependency": [[20, 1, 1, "", "Dependency"]], "geosolver.dependencies.dependency.Dependency": [[20, 2, 1, "", "add"], [20, 2, 1, "", "mk"], [20, 2, 1, "", "pretty"], [20, 3, 1, "", "reason"], [20, 3, 1, "", "statement"], [20, 3, 1, "", "why"], [20, 2, 1, "", "with_new"]], "geosolver.dependencies.dependency_graph": [[21, 1, 1, "", "DependencyGraph"]], "geosolver.dependencies.dependency_graph.DependencyGraph": [[21, 2, 1, "", "checked"], [21, 2, 1, "", "has_edge"], [21, 2, 1, "", "premises"], [21, 2, 1, "", "proof_deps"]], "geosolver.dependencies.symbols": [[22, 1, 1, "", "Circle"], [22, 1, 1, "", "Line"], [22, 1, 1, "", "Point"], [22, 1, 1, "", "Symbol"]], "geosolver.dependencies.symbols.Circle": [[22, 2, 1, "", "check_cyclic"], [22, 2, 1, "", "make_cyclic"], [22, 3, 1, "", "num"], [22, 3, 1, "", "points"], [22, 2, 1, "", "why_cyclic"]], "geosolver.dependencies.symbols.Line": [[22, 2, 1, "", "check_coll"], [22, 2, 1, "", "make_coll"], [22, 3, 1, "", "num"], [22, 3, 1, "", "points"], [22, 2, 1, "", "why_coll"]], "geosolver.dependencies.symbols.Point": [[22, 3, 1, "", "num"], [22, 5, 1, "", "pretty_name"]], "geosolver.dependencies.symbols.Symbol": [[22, 2, 1, "", "merge"], [22, 2, 1, "", "rep"]], "geosolver.dependencies.symbols_graph": [[23, 1, 1, "", "SymbolsGraph"]], "geosolver.dependencies.symbols_graph.SymbolsGraph": [[23, 2, 1, "", "container_of"], [23, 2, 1, "", "line_thru_pair"], [23, 2, 1, "", "names2points"], [23, 2, 1, "", "new_node"], [23, 2, 1, "", "nodes_of_type"]], "geosolver.formulations": [[25, 0, 0, "-", "clause"], [26, 0, 0, "-", "definition"], [27, 0, 0, "-", "problem"], [28, 0, 0, "-", "rule"]], "geosolver.formulations.clause": [[25, 1, 1, "", "Clause"], [25, 4, 1, "", "translate_sentence"]], "geosolver.formulations.clause.Clause": [[25, 2, 1, "", "parse_line"], [25, 3, 1, "", "points"], [25, 2, 1, "", "renamed"], [25, 3, 1, "", "sentences"]], "geosolver.formulations.definition": [[26, 1, 1, "", "DefinitionJGEX"]], "geosolver.formulations.definition.DefinitionJGEX": [[26, 3, 1, "", "basics"], [26, 3, 1, "", "declare"], [26, 2, 1, "", "from_str"], [26, 3, 1, "", "numerics"], [26, 2, 1, "", "parse_text"], [26, 2, 1, "", "parse_txt_file"], [26, 3, 1, "", "rely"], [26, 3, 1, "", "require"], [26, 2, 1, "", "to_dict"]], "geosolver.formulations.problem": [[27, 1, 1, "", "ProblemJGEX"]], "geosolver.formulations.problem.ProblemJGEX": [[27, 3, 1, "", "constructions"], [27, 2, 1, "", "from_file"], [27, 2, 1, "", "from_text"], [27, 3, 1, "", "goals"], [27, 3, 1, "", "name"], [27, 2, 1, "", "parse_txt_file"], [27, 2, 1, "", "points"], [27, 2, 1, "", "renamed"], [27, 2, 1, "", "with_more_construction"]], "geosolver.formulations.rule": [[28, 1, 1, "", "Rule"]], "geosolver.formulations.rule.Rule": [[28, 3, 1, "", "conclusions"], [28, 3, 1, "", "descrption"], [28, 2, 1, "", "from_string"], [28, 2, 1, "", "parse_text"], [28, 2, 1, "", "parse_txt_file"], [28, 3, 1, "", "premises"], [28, 2, 1, "", "variables"]], "geosolver.load_geogebra": [[29, 1, 1, "", "Form"], [29, 4, 1, "", "dedup"], [29, 4, 1, "", "load_geogebra"]], "geosolver.load_geogebra.Form": [[29, 3, 1, "", "Circle"], [29, 3, 1, "", "Line"]], "geosolver.match_theorems": [[30, 1, 1, "", "Matcher"]], "geosolver.match_theorems.Matcher": [[30, 2, 1, "", "cache_theorem"], [30, 2, 1, "", "match_theorem"]], "geosolver.numerical": [[32, 0, 0, "-", "angles"], [33, 0, 0, "-", "check"], [31, 4, 1, "", "close_enough"], [34, 0, 0, "-", "distances"], [35, 0, 0, "-", "draw_figure"], [36, 0, 0, "-", "geometries"], [31, 4, 1, "", "nearly_zero"], [31, 4, 1, "", "sign"], [37, 0, 0, "-", "sketch"]], "geosolver.numerical.angles": [[32, 4, 1, "", "ang_between"], [32, 4, 1, "", "ang_of"]], "geosolver.numerical.check": [[33, 4, 1, "", "clock"], [33, 4, 1, "", "same_clock"]], "geosolver.numerical.distances": [[34, 6, 1, "", "PointTooCloseError"], [34, 6, 1, "", "PointTooFarError"], [34, 4, 1, "", "check_too_close_numerical"], [34, 4, 1, "", "check_too_far_numerical"]], "geosolver.numerical.draw_figure": [[35, 4, 1, "", "draw_angle"], [35, 4, 1, "", "draw_circle"], [35, 4, 1, "", "draw_figure"], [35, 4, 1, "", "draw_line"], [35, 4, 1, "", "draw_point"], [35, 4, 1, "", "draw_rectangle"], [35, 4, 1, "", "draw_segment"], [35, 4, 1, "", "draw_segment_num"], [35, 4, 1, "", "fill_missing"], [35, 4, 1, "", "init_figure"]], "geosolver.numerical.geometries": [[36, 1, 1, "", "CircleNum"], [36, 1, 1, "", "FormNum"], [36, 6, 1, "", "InvalidIntersectError"], [36, 6, 1, "", "InvalidReduceError"], [36, 1, 1, "", "LineNum"], [36, 1, 1, "", "PointNum"], [36, 4, 1, "", "circle_circle_intersection"], [36, 4, 1, "", "circle_segment_intersect"], [36, 4, 1, "", "intersect"], [36, 4, 1, "", "line_circle_intersection"], [36, 4, 1, "", "line_line_intersection"], [36, 4, 1, "", "perpendicular_bisector"], [36, 4, 1, "", "reduce"], [36, 4, 1, "", "solve_quad"]], "geosolver.numerical.geometries.CircleNum": [[36, 2, 1, "", "sample_within"]], "geosolver.numerical.geometries.FormNum": [[36, 2, 1, "", "sample_within"]], "geosolver.numerical.geometries.LineNum": [[36, 2, 1, "", "angle"], [36, 2, 1, "", "diff_side"], [36, 2, 1, "", "distance"], [36, 2, 1, "", "is_parallel"], [36, 2, 1, "", "is_perp"], [36, 2, 1, "", "parallel_line"], [36, 2, 1, "", "perpendicular_line"], [36, 2, 1, "", "point_at"], [36, 2, 1, "", "same"], [36, 2, 1, "", "same_side"], [36, 2, 1, "", "sample_within"]], "geosolver.numerical.geometries.PointNum": [[36, 2, 1, "", "angle"], [36, 2, 1, "", "close_enough"], [36, 2, 1, "", "deduplicate"], [36, 2, 1, "", "distance"], [36, 2, 1, "", "distance2"], [36, 2, 1, "", "dot"], [36, 2, 1, "", "flip"], [36, 2, 1, "", "foot"], [36, 2, 1, "", "intersect"], [36, 2, 1, "", "parallel_line"], [36, 2, 1, "", "perpendicular_line"], [36, 2, 1, "", "rot90"], [36, 2, 1, "", "rotate"], [36, 2, 1, "", "rotatea"]], "geosolver.numerical.sketch": [[37, 4, 1, "", "head_from"], [37, 4, 1, "", "random_points"], [37, 4, 1, "", "random_rfss"], [37, 4, 1, "", "sketch"], [37, 4, 1, "", "sketch_2l1c"], [37, 4, 1, "", "sketch_3peq"], [37, 4, 1, "", "sketch_acircle"], [37, 4, 1, "", "sketch_aconst"], [37, 4, 1, "", "sketch_aline"], [37, 4, 1, "", "sketch_aline0"], [37, 4, 1, "", "sketch_amirror"], [37, 4, 1, "", "sketch_bisect"], [37, 4, 1, "", "sketch_bline"], [37, 4, 1, "", "sketch_cc_tangent"], [37, 4, 1, "", "sketch_centroid"], [37, 4, 1, "", "sketch_circle"], [37, 4, 1, "", "sketch_cyclic"], [37, 4, 1, "", "sketch_dia"], [37, 4, 1, "", "sketch_e5128"], [37, 4, 1, "", "sketch_eq_quadrangle"], [37, 4, 1, "", "sketch_eqangle2"], [37, 4, 1, "", "sketch_eqangle3"], [37, 4, 1, "", "sketch_eqdia_quadrangle"], [37, 4, 1, "", "sketch_eqratio"], [37, 4, 1, "", "sketch_eqratio6"], [37, 4, 1, "", "sketch_exbisect"], [37, 4, 1, "", "sketch_excenter2"], [37, 4, 1, "", "sketch_free"], [37, 4, 1, "", "sketch_ieq_triangle"], [37, 4, 1, "", "sketch_incenter2"], [37, 4, 1, "", "sketch_iso_trapezoid"], [37, 4, 1, "", "sketch_isos"], [37, 4, 1, "", "sketch_isosvertex"], [37, 4, 1, "", "sketch_isquare"], [37, 4, 1, "", "sketch_lconst"], [37, 4, 1, "", "sketch_line"], [37, 4, 1, "", "sketch_midp"], [37, 4, 1, "", "sketch_ninepoints"], [37, 4, 1, "", "sketch_on_opline"], [37, 4, 1, "", "sketch_pentagon"], [37, 4, 1, "", "sketch_pline"], [37, 4, 1, "", "sketch_pmirror"], [37, 4, 1, "", "sketch_quadrangle"], [37, 4, 1, "", "sketch_r_trapezoid"], [37, 4, 1, "", "sketch_r_triangle"], [37, 4, 1, "", "sketch_rconst"], [37, 4, 1, "", "sketch_rconst2"], [37, 4, 1, "", "sketch_rectangle"], [37, 4, 1, "", "sketch_reflect"], [37, 4, 1, "", "sketch_risos"], [37, 4, 1, "", "sketch_rotaten90"], [37, 4, 1, "", "sketch_rotatep90"], [37, 4, 1, "", "sketch_s_angle"], [37, 4, 1, "", "sketch_segment"], [37, 4, 1, "", "sketch_shift"], [37, 4, 1, "", "sketch_square"], [37, 4, 1, "", "sketch_tangent"], [37, 4, 1, "", "sketch_tline"], [37, 4, 1, "", "sketch_trapezoid"], [37, 4, 1, "", "sketch_triangle"], [37, 4, 1, "", "sketch_triangle12"], [37, 4, 1, "", "sketch_trisect"], [37, 4, 1, "", "sketch_trisegment"]], "geosolver.predicates": [[39, 0, 0, "-", "Pythagoras"], [40, 0, 0, "-", "circumcenter"], [41, 0, 0, "-", "collinearity"], [42, 0, 0, "-", "congruence"], [43, 0, 0, "-", "constant_angle"], [44, 0, 0, "-", "constant_length"], [45, 0, 0, "-", "constant_ratio"], [46, 0, 0, "-", "cyclic"], [47, 0, 0, "-", "different"], [48, 0, 0, "-", "equal_angles"], [49, 0, 0, "-", "equal_ratios"], [50, 0, 0, "-", "midpoint"], [51, 0, 0, "-", "parallelism"], [52, 0, 0, "-", "perpendicularity"], [53, 0, 0, "-", "predicate"], [54, 0, 0, "-", "sameclock"], [55, 0, 0, "-", "sameside"], [56, 0, 0, "-", "triangles_congruent"], [57, 0, 0, "-", "triangles_similar"]], "geosolver.predicates.Pythagoras": [[39, 1, 1, "", "PythagoreanConclusions"], [39, 1, 1, "", "PythagoreanPremises"]], "geosolver.predicates.Pythagoras.PythagoreanConclusions": [[39, 3, 1, "", "NAME"], [39, 2, 1, "", "add"], [39, 2, 1, "", "check_numerical"], [39, 2, 1, "", "parse"], [39, 2, 1, "", "preparse"]], "geosolver.predicates.Pythagoras.PythagoreanPremises": [[39, 3, 1, "", "NAME"], [39, 2, 1, "", "check"], [39, 2, 1, "", "check_numerical"], [39, 2, 1, "", "parse"], [39, 2, 1, "", "preparse"], [39, 2, 1, "", "pretty"], [39, 2, 1, "", "why"]], "geosolver.predicates.circumcenter": [[40, 1, 1, "", "Circumcenter"]], "geosolver.predicates.circumcenter.Circumcenter": [[40, 3, 1, "", "NAME"], [40, 2, 1, "", "add"], [40, 2, 1, "", "check"], [40, 2, 1, "", "check_numerical"], [40, 2, 1, "", "parse"], [40, 2, 1, "", "preparse"], [40, 2, 1, "", "pretty"], [40, 2, 1, "", "why"]], "geosolver.predicates.collinearity": [[41, 1, 1, "", "Coll"], [41, 1, 1, "", "NColl"]], "geosolver.predicates.collinearity.Coll": [[41, 3, 1, "", "NAME"], [41, 2, 1, "", "add"], [41, 2, 1, "", "check"], [41, 2, 1, "", "check_numerical"], [41, 2, 1, "", "draw"], [41, 2, 1, "", "parse"], [41, 2, 1, "", "preparse"], [41, 2, 1, "", "pretty"], [41, 2, 1, "", "to_constructive"], [41, 2, 1, "", "to_tokens"], [41, 2, 1, "", "why"]], "geosolver.predicates.collinearity.NColl": [[41, 3, 1, "", "NAME"], [41, 2, 1, "", "check"], [41, 2, 1, "", "check_numerical"], [41, 2, 1, "", "parse"], [41, 2, 1, "", "preparse"], [41, 2, 1, "", "pretty"], [41, 2, 1, "", "why"]], "geosolver.predicates.congruence": [[42, 1, 1, "", "Cong"]], "geosolver.predicates.congruence.Cong": [[42, 3, 1, "", "NAME"], [42, 2, 1, "", "add"], [42, 2, 1, "", "check"], [42, 2, 1, "", "check_numerical"], [42, 2, 1, "", "draw"], [42, 2, 1, "", "parse"], [42, 2, 1, "", "preparse"], [42, 2, 1, "", "pretty"], [42, 2, 1, "", "to_constructive"], [42, 2, 1, "", "to_tokens"], [42, 2, 1, "", "why"]], "geosolver.predicates.constant_angle": [[43, 1, 1, "", "ACompute"], [43, 1, 1, "", "ConstantAngle"]], "geosolver.predicates.constant_angle.ACompute": [[43, 3, 1, "", "NAME"], [43, 2, 1, "", "check"], [43, 2, 1, "", "check_numerical"], [43, 2, 1, "", "parse"], [43, 2, 1, "", "preparse"], [43, 2, 1, "", "pretty"], [43, 2, 1, "", "why"]], "geosolver.predicates.constant_angle.ConstantAngle": [[43, 3, 1, "", "NAME"], [43, 2, 1, "", "add"], [43, 2, 1, "", "check"], [43, 2, 1, "", "check_numerical"], [43, 2, 1, "", "parse"], [43, 2, 1, "", "preparse"], [43, 2, 1, "", "pretty"], [43, 2, 1, "", "to_tokens"], [43, 2, 1, "", "why"]], "geosolver.predicates.constant_length": [[44, 1, 1, "", "ConstantLength"], [44, 1, 1, "", "LCompute"]], "geosolver.predicates.constant_length.ConstantLength": [[44, 3, 1, "", "NAME"], [44, 2, 1, "", "add"], [44, 2, 1, "", "check"], [44, 2, 1, "", "check_numerical"], [44, 2, 1, "", "parse"], [44, 2, 1, "", "preparse"], [44, 2, 1, "", "pretty"], [44, 2, 1, "", "to_tokens"], [44, 2, 1, "", "why"]], "geosolver.predicates.constant_length.LCompute": [[44, 3, 1, "", "NAME"], [44, 2, 1, "", "check"], [44, 2, 1, "", "check_numerical"], [44, 2, 1, "", "parse"], [44, 2, 1, "", "preparse"], [44, 2, 1, "", "pretty"], [44, 2, 1, "", "why"]], "geosolver.predicates.constant_ratio": [[45, 1, 1, "", "ConstantRatio"], [45, 1, 1, "", "RCompute"]], "geosolver.predicates.constant_ratio.ConstantRatio": [[45, 3, 1, "", "NAME"], [45, 2, 1, "", "add"], [45, 2, 1, "", "check"], [45, 2, 1, "", "check_numerical"], [45, 2, 1, "", "parse"], [45, 2, 1, "", "preparse"], [45, 2, 1, "", "pretty"], [45, 2, 1, "", "to_tokens"], [45, 2, 1, "", "why"]], "geosolver.predicates.constant_ratio.RCompute": [[45, 3, 1, "", "NAME"], [45, 2, 1, "", "check"], [45, 2, 1, "", "check_numerical"], [45, 2, 1, "", "parse"], [45, 2, 1, "", "preparse"], [45, 2, 1, "", "pretty"], [45, 2, 1, "", "why"]], "geosolver.predicates.cyclic": [[46, 1, 1, "", "Cyclic"]], "geosolver.predicates.cyclic.Cyclic": [[46, 3, 1, "", "NAME"], [46, 2, 1, "", "add"], [46, 2, 1, "", "check"], [46, 2, 1, "", "check_numerical"], [46, 2, 1, "", "draw"], [46, 2, 1, "", "parse"], [46, 2, 1, "", "preparse"], [46, 2, 1, "", "pretty"], [46, 2, 1, "", "to_constructive"], [46, 2, 1, "", "to_tokens"], [46, 2, 1, "", "why"]], "geosolver.predicates.different": [[47, 1, 1, "", "Diff"]], "geosolver.predicates.different.Diff": [[47, 3, 1, "", "NAME"], [47, 2, 1, "", "check"], [47, 2, 1, "", "check_numerical"], [47, 2, 1, "", "parse"], [47, 2, 1, "", "preparse"], [47, 2, 1, "", "to_repr"], [47, 2, 1, "", "why"]], "geosolver.predicates.equal_angles": [[48, 1, 1, "", "EqAngle"]], "geosolver.predicates.equal_angles.EqAngle": [[48, 3, 1, "", "NAME"], [48, 2, 1, "", "add"], [48, 2, 1, "", "check"], [48, 2, 1, "", "check_numerical"], [48, 2, 1, "", "draw"], [48, 2, 1, "", "parse"], [48, 2, 1, "", "preparse"], [48, 2, 1, "", "pretty"], [48, 2, 1, "", "to_constructive"], [48, 2, 1, "", "to_tokens"], [48, 2, 1, "", "why"]], "geosolver.predicates.equal_ratios": [[49, 1, 1, "", "EqRatio"], [49, 1, 1, "", "EqRatio3"]], "geosolver.predicates.equal_ratios.EqRatio": [[49, 3, 1, "", "NAME"], [49, 2, 1, "", "add"], [49, 2, 1, "", "check"], [49, 2, 1, "", "check_numerical"], [49, 2, 1, "", "parse"], [49, 2, 1, "", "preparse"], [49, 2, 1, "", "pretty"], [49, 2, 1, "", "to_tokens"], [49, 2, 1, "", "why"]], "geosolver.predicates.equal_ratios.EqRatio3": [[49, 3, 1, "", "NAME"], [49, 2, 1, "", "add"], [49, 2, 1, "", "check"], [49, 2, 1, "", "check_numerical"], [49, 2, 1, "", "parse"], [49, 2, 1, "", "preparse"]], "geosolver.predicates.midpoint": [[50, 1, 1, "", "MidPoint"]], "geosolver.predicates.midpoint.MidPoint": [[50, 3, 1, "", "NAME"], [50, 2, 1, "", "check_numerical"], [50, 2, 1, "", "parse"], [50, 2, 1, "", "preparse"], [50, 2, 1, "", "pretty"]], "geosolver.predicates.parallelism": [[51, 1, 1, "", "NPara"], [51, 1, 1, "", "Para"]], "geosolver.predicates.parallelism.NPara": [[51, 3, 1, "", "NAME"], [51, 2, 1, "", "check"], [51, 2, 1, "", "check_numerical"], [51, 2, 1, "", "parse"], [51, 2, 1, "", "preparse"], [51, 2, 1, "", "pretty"]], "geosolver.predicates.parallelism.Para": [[51, 3, 1, "", "NAME"], [51, 2, 1, "", "add"], [51, 2, 1, "", "check"], [51, 2, 1, "", "check_numerical"], [51, 2, 1, "", "draw"], [51, 2, 1, "", "parse"], [51, 2, 1, "", "preparse"], [51, 2, 1, "", "pretty"], [51, 2, 1, "", "to_constructive"], [51, 2, 1, "", "why"]], "geosolver.predicates.perpendicularity": [[52, 1, 1, "", "NPerp"], [52, 1, 1, "", "Perp"]], "geosolver.predicates.perpendicularity.NPerp": [[52, 3, 1, "", "NAME"], [52, 2, 1, "", "check"], [52, 2, 1, "", "check_numerical"], [52, 2, 1, "", "parse"], [52, 2, 1, "", "preparse"], [52, 2, 1, "", "pretty"]], "geosolver.predicates.perpendicularity.Perp": [[52, 3, 1, "", "NAME"], [52, 2, 1, "", "add"], [52, 2, 1, "", "check"], [52, 2, 1, "", "check_numerical"], [52, 2, 1, "", "draw"], [52, 2, 1, "", "parse"], [52, 2, 1, "", "preparse"], [52, 2, 1, "", "pretty"], [52, 2, 1, "", "to_constructive"], [52, 2, 1, "", "to_tokens"], [52, 2, 1, "", "why"]], "geosolver.predicates.predicate": [[53, 1, 1, "", "Predicate"]], "geosolver.predicates.predicate.Predicate": [[53, 3, 1, "", "NAME"], [53, 2, 1, "", "add"], [53, 2, 1, "", "check"], [53, 2, 1, "", "check_numerical"], [53, 2, 1, "", "draw"], [53, 2, 1, "", "parse"], [53, 2, 1, "", "preparse"], [53, 2, 1, "", "pretty"], [53, 2, 1, "", "to_constructive"], [53, 2, 1, "", "to_repr"], [53, 2, 1, "", "to_tokens"], [53, 2, 1, "", "why"]], "geosolver.predicates.sameclock": [[54, 1, 1, "", "SameClock"]], "geosolver.predicates.sameclock.SameClock": [[54, 3, 1, "", "NAME"], [54, 2, 1, "", "add"], [54, 2, 1, "", "check"], [54, 2, 1, "", "check_numerical"], [54, 2, 1, "", "parse"], [54, 2, 1, "", "preparse"], [54, 2, 1, "", "pretty"], [54, 2, 1, "", "why"]], "geosolver.predicates.sameside": [[55, 1, 1, "", "NSameSide"], [55, 1, 1, "", "SameSide"]], "geosolver.predicates.sameside.NSameSide": [[55, 3, 1, "", "NAME"], [55, 2, 1, "", "check"], [55, 2, 1, "", "check_numerical"], [55, 2, 1, "", "parse"], [55, 2, 1, "", "preparse"], [55, 2, 1, "", "pretty"], [55, 2, 1, "", "why"]], "geosolver.predicates.sameside.SameSide": [[55, 3, 1, "", "NAME"], [55, 2, 1, "", "check"], [55, 2, 1, "", "check_numerical"], [55, 2, 1, "", "parse"], [55, 2, 1, "", "preparse"], [55, 2, 1, "", "pretty"], [55, 2, 1, "", "why"]], "geosolver.predicates.triangles_congruent": [[56, 1, 1, "", "ContriClock"], [56, 1, 1, "", "ContriReflect"]], "geosolver.predicates.triangles_congruent.ContriClock": [[56, 3, 1, "", "NAME"], [56, 2, 1, "", "check_numerical"], [56, 2, 1, "", "parse"], [56, 2, 1, "", "preparse"], [56, 2, 1, "", "to_tokens"]], "geosolver.predicates.triangles_congruent.ContriReflect": [[56, 3, 1, "", "NAME"], [56, 2, 1, "", "check_numerical"], [56, 2, 1, "", "parse"], [56, 2, 1, "", "preparse"], [56, 2, 1, "", "to_tokens"]], "geosolver.predicates.triangles_similar": [[57, 1, 1, "", "SimtriClock"], [57, 1, 1, "", "SimtriReflect"], [57, 4, 1, "", "two_triangles"]], "geosolver.predicates.triangles_similar.SimtriClock": [[57, 3, 1, "", "NAME"], [57, 2, 1, "", "check_numerical"], [57, 2, 1, "", "draw"], [57, 2, 1, "", "parse"], [57, 2, 1, "", "preparse"], [57, 2, 1, "", "pretty"], [57, 2, 1, "", "to_tokens"]], "geosolver.predicates.triangles_similar.SimtriReflect": [[57, 3, 1, "", "NAME"], [57, 2, 1, "", "check_numerical"], [57, 2, 1, "", "draw"], [57, 2, 1, "", "parse"], [57, 2, 1, "", "preparse"], [57, 2, 1, "", "pretty"], [57, 2, 1, "", "to_tokens"]], "geosolver.proof": [[58, 6, 1, "", "ConstructionError"], [58, 1, 1, "", "ProofState"]], "geosolver.proof.ProofState": [[58, 2, 1, "", "add_construction"], [58, 2, 1, "", "apply_dep"], [58, 2, 1, "", "build_problemJGEX"], [58, 2, 1, "", "check_goals"], [58, 2, 1, "", "match_theorem"], [58, 2, 1, "", "new_cache"]], "geosolver.proof_writing": [[59, 4, 1, "", "write_proof_steps"]], "geosolver.run_loop": [[60, 4, 1, "", "run_loop"]], "geosolver.statement": [[61, 1, 1, "", "Statement"]], "geosolver.statement.Statement": [[61, 2, 1, "", "check"], [61, 2, 1, "", "check_numerical"], [61, 2, 1, "", "draw"], [61, 2, 1, "", "from_tokens"], [61, 2, 1, "", "pretty"], [61, 2, 1, "", "why"], [61, 2, 1, "", "with_new"]], "geosolver.tools": [[62, 6, 1, "", "InfQuotientError"], [62, 4, 1, "", "atomize"], [62, 4, 1, "", "fraction_to_angle"], [62, 4, 1, "", "fraction_to_len"], [62, 4, 1, "", "fraction_to_ratio"], [62, 4, 1, "", "get_quotient"], [62, 4, 1, "", "notNone"], [62, 4, 1, "", "reshape"], [62, 4, 1, "", "str_to_fraction"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [1, 7, 23, 25, 26, 27, 28, 36, 62], "0": [0, 13, 16, 20, 25, 26, 27, 28, 29, 34, 36], "023": 0, "06747": 0, "1": [3, 5, 13, 20, 25, 26, 27, 28, 29, 34, 37], "10": [0, 34], "10000": 17, "1038": 0, "120o": 43, "2": [5, 20, 26, 27, 28, 36, 45], "2024": 0, "2l1c": 3, "2pi": 43, "3": [26, 41, 43, 45], "3peq": 3, "4": [0, 26, 46], "5": [0, 1, 36], "6": 49, "A": [2, 5, 6, 40, 41, 42, 44, 45, 46, 50, 51, 52, 56, 57], "And": [0, 7], "As": 5, "BY": 0, "For": 0, "If": [1, 5, 6, 36], "In": [1, 2, 48], "It": [3, 5, 6, 20, 49, 51, 56, 57], "NOT": [3, 51, 52], "No": 3, "On": 0, "One": [5, 6, 61], "The": [0, 1, 2, 3, 5, 6, 16, 43], "There": 16, "To": [0, 1, 6], "With": 6, "ab": [1, 3, 5, 37, 39, 42, 43, 44, 45, 48, 49, 50, 51, 52], "abc": [3, 5, 10, 22, 36, 39, 40, 53, 56, 57], "abcd": [3, 5], "abcp": 5, "abcpqr": 5, "abcx": 3, "abl": 6, "abov": 3, "abpq": 5, "abstract": [10, 36], "abx": 3, "ac": [1, 3, 5, 39, 49], "acb": 3, "acknowledg": 3, "acomput": [8, 38, 43], "aconst": [3, 43], "action": [6, 10], "activ": 0, "acx": 3, "ad": [0, 3, 4, 5, 6], "add": [1, 3, 5, 6, 8, 16, 19, 20, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 58], "add_construct": [8, 9, 13, 58], "add_expr": [8, 14, 16], "add_fre": [8, 14, 16], "adder": 6, "addit": 3, "advanc": 0, "after": 6, "again": 6, "agent": [0, 8, 11, 12], "ai": 3, "alc": 5, "algebra": [0, 5, 6, 8, 16], "algebraicmanipul": [8, 14, 15], "alia": [13, 20, 25, 26, 27, 28], "align": 41, "alin": 37, "all": [3, 5, 6, 7, 10, 11, 12, 22, 36], "allow": [1, 2, 3, 5, 6, 7, 10, 48], "alongsid": 1, "alphageometri": [4, 6], "alphageometrytrinh2024": 0, "alreadi": 16, "also": [3, 6, 7], "although": 1, "altogeth": 1, "alwai": 5, "am": [3, 5, 49], "an": [0, 1, 2, 3, 4, 5, 6, 37, 49], "ang": [36, 37], "ang_between": [8, 31, 32], "ang_of": [8, 31, 32], "angl": [3, 6, 8, 31, 36, 37, 38, 39, 56, 57], "angular": 51, "ani": [3, 13, 39, 40, 41, 42, 43, 44, 51, 52, 53, 54, 56, 57, 60], "anoth": [3, 5, 37], "ao": [3, 5], "ap": 5, "api": [0, 8], "appli": [5, 6, 11, 12, 61], "applic": [0, 6], "apply_al": 13, "apply_dep": [8, 58], "apply_non": 13, "aq": 5, "ar": [0, 1, 2, 3, 5, 6, 14, 16, 21, 22, 33, 41, 42, 51, 52, 53, 56, 57, 61], "arc": 5, "arg": [35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61], "args_nam": 35, "args_point": 35, "argument": [1, 2, 3, 5, 41], "ark": 0, "articl": 0, "ask": 5, "assign": [1, 6], "associ": 3, "assum": 1, "assumpt": 6, "ast": 5, "atom": [8, 62], "attempt": 6, "attribut": 0, "author": 0, "automat": 6, "aux": 6, "auxiliari": [0, 6], "avail": [0, 1, 3, 6, 11, 12], "avoid": 3, "ax": [3, 5, 35, 37, 41, 42, 46, 48, 51, 52, 53, 57, 61], "axb": 3, "b": [0, 1, 2, 5, 7, 16, 22, 31, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57], "ba": [3, 5], "back": 6, "base": [3, 6, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62], "basic": [3, 8, 24, 26], "bax": 3, "bc": [1, 3, 5], "bca": 3, "bcx": 3, "bd": [1, 3, 5, 49], "becaus": 3, "befor": 6, "begin": [3, 5], "being": [1, 3], "below": [0, 3, 7], "better": [17, 27], "between": [1, 3, 5, 6, 10, 16, 32, 49], "bfsdd": [11, 12], "bfsddar": [0, 8, 9, 11], "bin": 0, "bisector": 3, "block": [1, 3], "bm": [3, 5], "bn": 49, "bo": [3, 5], "bod": 5, "bodi": 6, "bool": [10, 11, 12, 13, 16, 17, 22, 31, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61], "both": [1, 3], "bound": 23, "boundari": [29, 36], "bp": 5, "bq": 5, "breadth": [6, 8, 9, 12, 13], "build": [0, 1, 3, 6, 7, 8, 17, 58], "build_problemjgex": [8, 58], "builder": [1, 6], "built": [0, 7], "bx": [3, 5, 36, 37], "c": [0, 1, 2, 5, 7, 16, 22, 33, 35, 36, 39, 40, 41, 42, 45, 46, 49, 51, 52, 54, 55, 56, 57], "c1": 36, "c2": 36, "ca": [3, 5], "cache_theorem": [8, 30], "call": [1, 6, 11, 12], "callabl": 13, "can": [0, 2, 3, 6, 7, 16, 22, 40, 48, 49, 50, 51], "canoniqu": 53, "canva": 35, "case": [1, 3, 5], "cb": 5, "cbx": 3, "cc": 0, "cc_tangent": 3, "cd": [0, 3, 5, 42, 43, 45, 48, 49, 51, 52], "center": [3, 36, 40], "centroid": 3, "certain": 3, "chang": 1, "check": [0, 6, 8, 9, 13, 19, 21, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61], "check_col": [8, 19, 22], "check_cycl": [8, 19, 22], "check_goal": [8, 9, 13, 58], "check_numer": [8, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61], "check_too_close_numer": [8, 31, 34], "check_too_far_numer": [8, 31, 34], "checker": 6, "checkpoint": 0, "choos": 6, "chord": 5, "circl": [6, 8, 19, 22, 23, 29, 36, 37, 40, 46], "circle_circle_intersect": [8, 31, 36], "circle_segment_intersect": [8, 31, 36], "circlenum": [8, 22, 31, 36, 37], "circumcent": [8, 38], "circumcircl": 5, "class": [10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61], "classic": [11, 12, 13], "classmethod": [13, 16, 20, 22, 25, 26, 27, 28, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61], "claus": [8, 24, 26, 27, 58], "clean": 6, "clear": 1, "clock": [8, 31, 33], "clockwis": 43, "clone": 0, "close_enough": [8, 31, 36], "cloud": 37, "coeffici": [16, 36, 51], "coher": 6, "colinear": [3, 33], "coll": [3, 5, 8, 38, 41, 50], "collect": [3, 5], "collinear": [3, 5, 6, 8, 38], "colon": 1, "com": 0, "combin": [1, 3], "come": 61, "command": 0, "commit": 0, "common": [0, 3, 10], "compar": 3, "compass": 1, "compat": 6, "compil": 6, "complex": 0, "compon": 6, "compos": 1, "conclus": [8, 24, 28], "concycl": 3, "condit": [1, 3, 6], "config": [0, 8], "conform": 3, "cong": [3, 8, 38, 40, 42, 50], "congruenc": [3, 8, 38, 40], "congruent": [3, 5, 8, 38, 42], "connect": [5, 6], "consequ": [5, 6], "consid": [1, 61], "const": 16, "constain": 6, "constant": [3, 5, 8, 16, 38], "constantangl": [8, 38, 43], "constantlength": [8, 38, 44], "constantratio": [8, 38, 45], "construct": [0, 1, 3, 6, 8, 24, 26, 27, 37, 58], "constructionerror": [8, 58], "contain": [3, 4, 7, 59], "container_of": [8, 19, 23], "contri": 56, "contribut": 6, "contriclock": [8, 38, 56], "contrir": 56, "contrireflect": [8, 38, 56], "control": 32, "convert": 5, "convex": 3, "coordin": [3, 6, 36], "correspond": [3, 5, 49, 56, 57], "cosb": 36, "could": [1, 3], "cover": 6, "creat": [0, 1, 2, 3, 13, 20, 25, 26, 27, 28], "create_new_point": 23, "creativ": 0, "creativecommon": 0, "cross": [3, 48], "current": [0, 61], "custom": 7, "cut": [1, 5], "cv": 16, "cx": [3, 5, 37], "cxb": 3, "cyclic": [8, 38], "d": [0, 1, 2, 5, 7, 16, 22, 33, 42, 45, 46, 49, 51, 52], "d0": 35, "d1": 35, "databas": 30, "db": [1, 5], "dbc": 5, "dc": [1, 5], "dd": [3, 30], "ddar": [0, 3, 8], "de": 3, "decid": [1, 6], "declar": [8, 24, 26], "dedic": 1, "deduc": 16, "deduct": [0, 5, 9, 10, 11, 12, 28, 30], "deductive_ag": [17, 60], "deductiveag": [8, 9, 10, 11, 12, 13, 60], "dedup": [8, 29], "dedupl": [8, 31, 36], "def": [1, 3, 6, 8, 17, 26, 37, 58], "default": [0, 1, 2, 6, 27], "default_config": [1, 2, 6], "default_configs_path": [8, 18], "default_defs_path": [8, 18], "default_rules_path": [8, 18], "defin": [1, 5], "definit": [0, 4, 6, 7, 8, 24, 59], "definitionjgex": [8, 17, 24, 26], "deform": 3, "defs_path": 17, "defs_txt": 17, "defsjgex": 58, "degeneraci": 6, "degre": [6, 43], "del_goal": [8, 17], "delta": [5, 16], "demand": [1, 3, 5], "demonstr": 0, "denomin": [5, 45], "dep": [16, 21, 22, 23, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 58], "dep_graph": [29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61], "depend": [0, 1, 6, 8, 16, 22, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 61], "dependencygraph": [8, 19, 21], "deriv": [1, 5, 11, 12, 14], "describ": 27, "descript": [3, 5], "descrption": [8, 24, 28], "detail": [0, 3, 6], "determin": 5, "dev": 0, "developp": 10, "diagon": [3, 37], "diagram": 1, "dict": [16, 17, 26, 27, 60], "diff": [8, 38, 47], "diff_sid": [8, 31, 36], "differ": [3, 6, 8, 10, 38, 51, 55], "differenti": 3, "direct": [5, 6, 20, 43], "directli": [1, 3], "discov": 6, "dismiss": 3, "displai": 0, "distanc": [3, 8, 31, 36], "distance2": [8, 31, 36], "distinct": 3, "divid": 1, "do": [3, 6], "doi": 0, "dot": [8, 31, 36], "doubl": 3, "draw": [1, 8, 31, 38, 41, 42, 46, 48, 51, 52, 53, 57, 61], "draw_angl": [8, 31, 35], "draw_circl": [8, 31, 35], "draw_figur": [8, 17, 31, 35], "draw_lin": [8, 31, 35], "draw_point": [8, 31, 35], "draw_rectangl": [8, 31, 35], "draw_seg": [8, 31, 35], "draw_segment_num": [8, 31, 35], "due": 49, "e": [0, 1, 2, 5, 16, 22, 33, 58], "e0": 16, "e1": 16, "e2": 16, "e5128": 3, "each": [1, 3, 5, 6, 22], "edg": [5, 20, 21], "edit": 0, "ef": [3, 5, 37, 48, 49], "effect": 6, "either": [3, 6, 43], "element": [1, 7], "els": [0, 7, 36], "empti": 59, "end": [3, 4, 5], "engin": 6, "ensur": 0, "enter": 3, "entri": 3, "enum": 29, "enumer": [2, 6], "environ": 0, "eqangl": [3, 8, 38, 48, 56, 57], "eqangle2": 37, "eqangle3": 3, "eqdict": 16, "eqratio": [3, 8, 38, 49, 56, 57], "eqratio3": [8, 38, 49], "eqratio6": 3, "equal": [3, 6, 8, 16, 37, 38, 47], "equat": 51, "equidist": 5, "equilater": 3, "equip": 0, "equiv": 22, "equival": [3, 22, 40, 50, 56, 57], "etc": 22, "eu": 0, "evalu": 1, "even": 1, "everyth": 35, "exactli": 3, "exampl": [0, 1, 2, 7], "exaust": [11, 12], "excent": 58, "except": [34, 36, 58, 62], "excircl": 3, "exercis": 1, "exhaust": [11, 12], "exhaust_with_bfsddar": [8, 9, 13], "exist": [1, 36], "existing_point": 36, "expect": 1, "explicit": [3, 10], "expr_delta": [8, 14, 16], "express": [2, 16], "extens": 0, "extern": 3, "extra": 1, "extrem": 35, "f": [0, 2, 3, 5, 7, 8, 9, 13, 22, 33, 62], "fact": [1, 3, 5], "fail": [0, 7], "failur": 6, "fals": [13, 16, 17], "feed": 5, "feedback": [6, 10], "field": [13, 20, 25, 26, 27, 28], "figur": [3, 5, 8, 31], "file": [0, 1, 3, 6, 59], "fill_miss": [8, 31, 35], "final": 6, "find": [0, 6], "first": [6, 7, 8, 9, 12, 13, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "five": 3, "fix": [5, 6], "fixpoint": [11, 12], "flemmard": [8, 9], "flip": [8, 31, 36, 37], "float": [32, 36, 44], "fn_match": [8, 9, 13], "fname": [26, 27, 28], "folder": [0, 7], "follow": [1, 3, 6, 43], "foot": [8, 31, 36], "form": [8, 29, 39], "formal": 5, "format": [1, 35], "formnum": [8, 31, 36], "formul": [0, 8], "formula": 6, "found": [1, 2, 7, 22, 60], "four": [3, 5], "frac": 5, "fraction": [3, 16, 43, 62], "fraction_to_angl": [8, 62], "fraction_to_len": [8, 62], "fraction_to_ratio": [8, 62], "freedom": 6, "from": [2, 3, 4, 5, 6, 7, 26, 27, 28, 32, 43], "from_fil": [8, 24, 27], "from_str": [8, 24, 26, 28], "from_text": [8, 24, 27], "from_token": [8, 61], "function": [1, 3, 6, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59], "futur": 6, "g": [3, 22, 58], "gener": [6, 30], "geogebra": [0, 8], "geometr": [1, 8, 22], "geometri": [0, 8, 31], "geometricsolv": [0, 7, 8, 17], "geometricsolverbuild": [0, 7, 8, 17], "geosolv": [1, 2, 4, 6, 7], "get": [0, 48], "get_eq1": [8, 14, 16], "get_eq2": [8, 14, 16], "get_eq4": [8, 14, 16], "get_length": [8, 14, 16], "get_quoti": [8, 62], "gh": [3, 5, 37, 48, 49], "git": 0, "gitlab": 0, "give": [1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "given": [1, 2, 3, 5, 6, 16, 23, 44, 45], "go": [3, 43], "goal": [6, 8, 17, 21, 24, 27, 58, 60], "graph": [6, 8, 19, 22], "guarante": 53, "guid": 6, "gx": 3, "h": 3, "ha": [1, 3, 5, 49], "half": 3, "hand": 1, "has_edg": [8, 19, 21], "have": [4, 5, 6], "he": 0, "head": 32, "head1": 32, "head2": 32, "head_from": [8, 31, 37], "height": 3, "help": [0, 6], "helper": [6, 59], "here": 6, "high": 7, "histori": 22, "hit": 6, "how": 0, "http": 0, "huawei": 0, "human": [0, 6, 8, 9], "humanag": [0, 8, 9, 13], "hyper": [20, 21], "hyperbola": 3, "hypothesi": [1, 5, 6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "i": [0, 1, 4, 7, 16, 20, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61], "ieq_triangl": 3, "iff": 16, "ii": 3, "implement": [9, 14, 16, 22, 27, 30, 58], "implicit": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "import": [0, 6, 7], "incircl": 3, "independ": 10, "index": 0, "infer": 36, "info": [0, 6, 7], "inform": [0, 1, 4, 5, 6], "infquotienterror": [8, 62], "init_figur": [8, 31, 35], "initi": 2, "inscrib": [3, 5], "instanc": [5, 13, 20, 25, 26, 27, 28, 49], "instead": 0, "int": 31, "integ": 3, "interact": [6, 10], "interfac": [0, 6, 8, 9], "intermediari": 6, "intern": [0, 3, 6, 16], "intersect": [1, 3, 5, 8, 31, 36], "intersection_pp": 3, "intersection_tt": 3, "intesect": 1, "intrins": 6, "introduc": 0, "invalidintersecterror": [8, 31, 36], "invalidreduceerror": [8, 31, 36], "involv": 1, "is_parallel": [8, 31, 36], "is_perp": [8, 31, 36], "iso_triangl": 3, "iso_triangle0": 3, "iso_triangle_vertex": 3, "iso_triangle_vertex_angl": 3, "iso_triangle_vertext_angl": 3, "isometri": 3, "isoscel": 3, "isquar": 3, "its": [1, 5, 6, 36], "itself": [3, 6], "ix": 3, "iz": 3, "journal": 0, "judgement": 1, "just": 5, "justifi": 20, "keep": 6, "kind": [6, 10], "kwarg": 37, "l": [37, 44], "label": 5, "languag": [0, 1, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59], "lc_tangent": 3, "lcomput": [8, 38, 44], "lconst": [3, 44], "le": 0, "left": 1, "leg": 5, "legaci": 4, "legalcod": 0, "lenght": 37, "length": [3, 5, 8, 37, 38, 49], "less": 3, "let": 1, "level": [7, 11, 12], "librari": 0, "licens": 0, "lie": [5, 46], "like": [6, 43], "line": [0, 1, 3, 6, 8, 19, 22, 23, 29, 35, 36, 37, 43, 48, 49, 51, 52], "line0": 35, "line1": 35, "line_1": 36, "line_2": 36, "line_circle_intersect": [8, 31, 36], "line_line_intersect": [8, 31, 36], "line_thru_pair": [8, 19, 23], "linenum": [8, 22, 31, 36, 37], "link": [20, 21], "list": [1, 2, 6, 16, 17, 20, 22, 23, 26, 28, 36, 37, 49, 58, 62], "llm": [17, 27], "lmn": 5, "load": [0, 6, 7, 8, 26, 27, 28], "load_defs_from_fil": [8, 17], "load_defs_from_txt": [8, 17], "load_geogebra": [8, 17, 29], "load_goal": [8, 17], "load_goals_fil": [8, 17], "load_problem": [8, 17], "load_problem_from_fil": [8, 17], "load_problem_from_txt": [0, 7, 8, 17], "load_rules_from_fil": [8, 17], "load_rules_from_txt": [8, 17], "locu": [3, 5], "logic": 7, "loop": [0, 8], "low": 6, "luong": 0, "m": [0, 5, 16, 49, 50], "ma": [5, 49], "mad": 5, "made": [0, 1, 7], "mai": [1, 6], "main": [6, 7], "maintain": 22, "make": [6, 10], "make_col": [8, 19, 22], "make_cycl": [8, 19, 22], "manipul": [3, 6, 8, 14], "manual": 6, "map": 25, "match": [0, 5, 6, 8, 9, 11, 12, 13], "match_theorem": [8, 30, 58], "matcher": [8, 30], "matrix": 16, "matter": 1, "max_attempt": [6, 17, 58], "mbc": 5, "mc": 49, "md": 5, "mean": 6, "member": 22, "merg": [8, 19, 22], "merged_from": 22, "merged_to": 22, "method": [0, 7], "midp": 50, "midpoint": [3, 8, 38], "milp": 16, "minim": [0, 7], "minu": [8, 14, 16], "mirror": [3, 37], "mk": [8, 19, 20], "mn": [3, 5, 49], "mo": 41, "model": 0, "modif": 1, "modifi": 1, "modul": [0, 1, 5, 6, 29], "more": [0, 1, 5, 6, 7, 41, 46], "move": 48, "mp": 25, "mult": [8, 14, 16], "multipl": 5, "multipli": 5, "must": 1, "mxc": 5, "n": [5, 37, 49, 62], "nab": 5, "name": [1, 5, 8, 9, 13, 22, 23, 24, 27, 28, 29, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "namedfunct": [8, 9, 13], "namedtupl": [13, 20, 25, 26, 27, 28], "names2point": [8, 19, 23], "natur": [0, 1, 3, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59], "nb": [5, 49], "nbc": 5, "nc": 5, "ncoll": [2, 8, 38, 41], "nd": 49, "nearly_zero": [8, 31], "necessarili": 6, "need": [1, 43], "neither": 3, "new": [0, 4, 13, 16, 20, 25, 26, 27, 28, 58], "new_arg": 61, "new_cach": [8, 58], "new_def": 3, "new_nod": [8, 19, 23], "new_pred": 61, "newpoint": 34, "next": [5, 6], "ninepoint": 3, "noah": 0, "node": 22, "nodes_of_typ": [8, 19, 23], "non": [3, 5, 6], "none": [16, 17, 22, 23, 29, 30, 35, 36, 40, 42, 43, 44, 45, 48, 49, 51, 52, 53, 58, 59, 62], "nor": 3, "noth": 3, "notnon": [8, 62], "now": [0, 7], "np": 32, "npara": [8, 38, 51], "nperp": [8, 38, 52], "nsamesid": [8, 38, 55], "nsquar": 3, "num": [8, 19, 22], "number": [6, 13, 20, 25, 26, 27, 28, 43], "numer": [0, 1, 5, 6, 8, 24, 26, 36, 41, 45, 47, 51, 52, 55, 61], "numerci": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "nxc": 5, "o": [5, 40, 43], "oa": [3, 5], "oac": 5, "ob": [3, 5], "obd": 5, "obj": 36, "object": [15, 16, 17, 21, 22, 23, 26, 27, 28, 30, 36, 58, 61], "obtain": [0, 7], "oc": 5, "occur": 3, "od": 5, "offer": 1, "oftyp": 23, "oi": 3, "olympiad": 0, "om": 5, "on_alin": 3, "on_aline0": 3, "on_blin": 3, "on_circl": 3, "on_circum": 3, "on_dia": 3, "on_lin": [1, 3], "on_oplin": 3, "on_plin": 3, "on_pline0": 3, "on_tlin": [0, 1, 3, 7], "onc": [1, 6], "one": [1, 3, 4, 5, 6, 16, 27, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "ones": 5, "onli": [0, 16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "onlin": 0, "onto": 3, "oppos": 3, "opposit": [3, 37], "option": [0, 13, 23, 36, 39, 40, 41, 42, 43, 44, 51, 52, 53, 54, 56, 57, 59, 61], "order": [1, 3, 5, 53, 61], "org": 0, "orient": [5, 43, 56, 57], "origin": [0, 1, 4, 6], "orthocent": 3, "orthocenter_consequence_aux": 0, "orthogon": 5, "other": [0, 1, 2, 3, 22, 36, 41, 53], "otherwis": 3, "out": 22, "out_fil": [17, 59], "out_folder_path": 17, "output": [6, 7, 59], "overdetermin": 1, "overlap": 3, "overview": 0, "own": 20, "ox": 3, "oz": 3, "p": [5, 35, 36, 56, 57], "p0": [16, 35], "p1": [16, 23, 35, 36], "p2": [23, 36], "p3": 36, "pa": 5, "packag": [0, 8], "page": 0, "pair": [3, 5, 36, 40], "paper": 0, "para": [2, 3, 8, 38, 51], "parallel": [3, 6, 8, 38, 49], "parallel_lin": [8, 31, 36], "parallelogram": 3, "paramet": 59, "pars": [8, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "parse_lin": [8, 24, 25], "parse_text": [8, 24, 26, 28], "parse_txt_fil": [8, 24, 26, 27, 28], "part": 6, "particular": [3, 48], "particularli": 3, "pass": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "path": [0, 6, 17, 18, 29, 59], "pb": 5, "pentagon": 3, "perp": [0, 1, 2, 3, 5, 7, 8, 38, 52], "perpendicular": [3, 6, 8, 38, 39, 48], "perpendicular_bisector": [8, 31, 36], "perpendicular_lin": [8, 31, 36], "perpendiculat": 3, "pi": [32, 43], "pictur": 6, "pl": 5, "plu": [8, 14, 16], "plus_al": [8, 14, 16], "pm": 5, "pn": 5, "pname": 23, "point": [1, 2, 3, 5, 6, 8, 19, 22, 23, 24, 25, 27, 34, 35, 36, 37, 41, 42, 46, 48, 49, 51, 52, 53, 61], "point_at": [8, 31, 36], "pointnum": [8, 22, 31, 36, 37], "pointtoocloseerror": [8, 31, 34], "pointtoofarerror": [8, 31, 34], "potenti": 6, "power": 6, "pq": 5, "pqr": [5, 56, 57], "pre": 0, "predic": [0, 1, 2, 3, 5, 6, 8, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61], "premis": [5, 6, 8, 19, 21, 24, 28], "prepars": [8, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "prescript": 3, "present": [1, 3, 6], "preserv": [1, 56, 57], "pretti": [6, 8, 19, 20, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61], "pretty_nam": [8, 19, 22], "previou": 1, "print": [0, 6, 7], "probabl": 6, "problem": [3, 7, 8, 17, 24, 58, 59], "problem_nam": [0, 17, 27], "problem_txt": 17, "problemjgex": [8, 24, 27, 58], "problems_dataset": 0, "problems_path": [17, 27], "process": [1, 5], "program": 6, "project": 3, "proof": [0, 3, 5, 8, 10, 11, 12, 13, 17, 27, 35, 60, 61], "proof_dep": [8, 19, 21], "proof_stat": 59, "proofstat": [8, 58], "proper": 1, "properti": [17, 22], "proport": 5, "propos": 0, "prove": 1, "pseudo": 6, "psquar": 3, "purpos": 6, "push": 0, "pytest": 0, "pythagora": [8, 38], "pythagoreanconclus": [8, 38, 39], "pythagoreanpremis": [8, 38, 39], "python": 0, "q": [5, 56, 57], "qa": 5, "qb": 5, "qp": 5, "qr": 5, "quadrangl": [3, 37], "quadrilater": 3, "qualnam": 29, "quoc": 0, "r": [3, 37, 45, 56, 57], "r28": 3, "r_trapezoid": 3, "r_triangl": 3, "radian": 43, "radiu": [3, 36], "rai": 3, "random": [3, 6, 37], "random_point": [8, 31, 37], "random_rfss": [8, 31, 37], "randomli": 6, "rangl": 5, "ratio": [3, 8, 38], "rcomput": [8, 38, 45], "rconst": [3, 45], "re": 41, "reach": [11, 12], "reacheabl": 6, "read": 1, "readabl": 5, "reason": [0, 5, 6, 8, 16, 19, 20], "recon": [8, 14, 16], "reconcil": 16, "rectangl": 3, "reduc": [8, 31, 36], "refer": 3, "reflect": [3, 48], "relat": 3, "reli": [8, 24, 26], "rememb": 6, "renam": [8, 17, 24, 25, 27], "rep": [8, 19, 22], "replac": [8, 14, 16], "repo": 0, "report": [8, 14, 16], "repositori": [0, 4, 7], "repres": [2, 6, 16, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58], "represent": [1, 2, 6, 22], "requir": [0, 8, 24, 26], "reshap": [8, 62], "respect": [1, 3, 5, 6, 48], "restrict": 3, "return": [3, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "revers": [1, 5], "right": [1, 3, 5, 39], "rigidli": 48, "riso": 3, "rnd": 0, "rng": [10, 11, 13, 30, 35, 36, 37, 41, 42, 46, 48, 51, 52, 53, 57, 58, 61], "rot90": [8, 31, 36], "rotat": [8, 31, 36, 37, 43], "rotatea": [8, 31, 36], "rp": 5, "rq": 5, "ru": 5, "rule": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 24], "rule_txt": 17, "rules_path": 17, "run": [0, 4, 6, 7, 8, 17], "run_info": [0, 7], "run_loop": [8, 60], "runtime_cache_path": [30, 58], "s41586": 0, "s_angl": 3, "sai": [3, 5], "same": [3, 5, 8, 31, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "same_clock": [8, 31, 33], "same_sid": [8, 31, 36], "sameclock": [8, 38], "samesid": [8, 38], "sampl": 36, "sample_within": [8, 31, 36], "saniti": 6, "satisfi": [1, 3, 6], "satur": 60, "save_to": 35, "scale": [3, 37], "scratch": 6, "script": [0, 6], "search": [0, 6, 8, 9, 12, 13], "second": [3, 7], "section": 3, "see": [0, 1, 3, 6], "seed": 17, "seen": 0, "segment": [3, 5, 42, 44, 49, 50], "select": [8, 9, 13], "self": [17, 22], "sentenc": [8, 24, 25], "separ": [1, 3, 45], "serv": 6, "set": [1, 5, 22, 61], "seven": 3, "shift": [3, 37], "shortest": 6, "should": [1, 3, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "show": [3, 5, 6], "show_graph": [8, 9, 13], "side": [1, 3, 5, 37, 55, 56, 57], "sign": [8, 31], "signatur": 1, "sim": 5, "similar": [1, 8, 38], "simpl": [5, 6], "simpler": 3, "simpli": [0, 1], "simtri": 57, "simtriclock": [8, 38, 57], "simtrir": 57, "simtrireflect": [8, 38, 57], "simultan": 3, "sinb": 36, "situat": 3, "six": 3, "sketch": [1, 6, 8, 31], "sketch_2l1c": [8, 31, 37], "sketch_3peq": [8, 31, 37], "sketch_acircl": [8, 31, 37], "sketch_aconst": [8, 31, 37], "sketch_alin": [8, 31, 37], "sketch_aline0": [8, 31, 37], "sketch_amirror": [8, 31, 37], "sketch_bisect": [8, 31, 37], "sketch_blin": [8, 31, 37], "sketch_cc_tang": [8, 31, 37], "sketch_centroid": [8, 31, 37], "sketch_circl": [8, 31, 37], "sketch_cycl": [8, 31, 37], "sketch_dia": [8, 31, 37], "sketch_e5128": [8, 31, 37], "sketch_eq_quadrangl": [8, 31, 37], "sketch_eqangle2": [8, 31, 37], "sketch_eqangle3": [8, 31, 37], "sketch_eqdia_quadrangl": [8, 31, 37], "sketch_eqratio": [8, 31, 37], "sketch_eqratio6": [8, 31, 37], "sketch_exbisect": [8, 31, 37], "sketch_excenter2": [8, 31, 37], "sketch_fre": [8, 31, 37], "sketch_ieq_triangl": [8, 31, 37], "sketch_incenter2": [8, 31, 37], "sketch_iso": [8, 31, 37], "sketch_iso_trapezoid": [8, 31, 37], "sketch_isosvertex": [8, 31, 37], "sketch_isquar": [8, 31, 37], "sketch_lconst": [8, 31, 37], "sketch_lin": [8, 31, 37], "sketch_midp": [8, 31, 37], "sketch_ninepoint": [8, 31, 37], "sketch_on_oplin": [8, 31, 37], "sketch_pentagon": [8, 31, 37], "sketch_plin": [8, 31, 37], "sketch_pmirror": [8, 31, 37], "sketch_quadrangl": [8, 31, 37], "sketch_r_trapezoid": [8, 31, 37], "sketch_r_triangl": [8, 31, 37], "sketch_rconst": [8, 31, 37], "sketch_rconst2": [8, 31, 37], "sketch_rectangl": [8, 31, 37], "sketch_reflect": [8, 31, 37], "sketch_riso": [8, 31, 37], "sketch_rotaten90": [8, 31, 37], "sketch_rotatep90": [8, 31, 37], "sketch_s_angl": [8, 31, 37], "sketch_seg": [8, 31, 37], "sketch_shift": [8, 31, 37], "sketch_squar": [8, 31, 37], "sketch_tang": [8, 31, 37], "sketch_tlin": [8, 31, 37], "sketch_trapezoid": [8, 31, 37], "sketch_triangl": [8, 31, 37], "sketch_triangle12": [8, 31, 37], "sketch_trisect": [8, 31, 37], "sketch_triseg": [8, 31, 37], "skip": 59, "slid": 32, "so": 3, "solut": 59, "solv": [0, 7, 27, 36], "solve_quad": [8, 31, 36], "solver": [1, 6, 7, 8], "solver_build": [0, 7], "some": [0, 1, 4, 5, 6], "sometim": 1, "sound": 61, "sourc": 7, "special": 5, "specif": [0, 4, 5, 6, 7], "specifi": 1, "split_bi": 62, "squar": 3, "src": 6, "standard": 5, "start": [6, 29], "state": [0, 1, 3, 5, 10, 58, 59], "statement": [0, 1, 2, 3, 5, 6, 8, 19, 20, 21, 22, 26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "statementshypergraph": 20, "step": [5, 6, 8, 9, 10, 11, 12, 13], "still": 1, "store": 6, "str": [13, 16, 17, 20, 22, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62], "str_to_fract": [8, 62], "straight": [5, 6], "straightedg": 1, "string": [1, 59], "strip": [8, 14, 16], "structur": 6, "stuck": 0, "sub": 6, "subdivid": 3, "subject": 3, "success": [0, 7, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "successfuli": [0, 7], "suggest": 0, "sum": 16, "sumcv_from_list": [8, 14, 16], "svg": 35, "symbol": [1, 3, 5, 6, 8, 19, 61], "symbols_graph": 22, "symbolsgraph": [8, 19, 23], "syntax": 43, "system": 16, "t": [0, 23, 29, 62], "tabl": [8, 14, 23], "tail": [32, 37], "take": [56, 57], "taken": 6, "tangenc": 3, "tangent": [3, 37], "tell": 6, "term": [0, 1], "test": [0, 7, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "text": [2, 5, 6, 26, 28], "thale": [5, 49], "than": [6, 36, 53], "thang": 0, "thei": [1, 3, 5, 6, 22, 33], "theorem": [0, 6, 8, 17, 27, 49, 58, 59], "thi": [1, 3, 5, 6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "third": [3, 5], "those": 6, "three": [1, 3, 49, 56, 57], "through": [3, 5, 6, 40, 49], "thu": [1, 49], "time": [5, 6], "titl": 0, "to_construct": [8, 38, 41, 42, 46, 48, 51, 52, 53], "to_dict": [8, 24, 26], "to_repr": [8, 38, 47, 53], "to_reshap": 62, "to_token": [8, 38, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 56, 57], "togeth": 5, "token": 61, "tol": 34, "tool": [0, 1, 8], "top": 48, "touch": [3, 36, 37], "tow": 3, "trace": 6, "traceback": [6, 16, 27], "track": 6, "train": [17, 27], "tranlat": [17, 27], "transform": [56, 57], "translat": [1, 3], "translate_sent": [8, 24, 25], "transvers": 5, "trapezoid": 3, "tri": 6, "trial": 36, "triangl": [0, 1, 3, 7, 8, 38, 39, 40], "triangle12": 3, "trieu": 0, "trigger": 6, "trinh": 0, "trisect": 3, "trisector": 37, "triseg": 3, "true": [2, 5, 6, 16, 17, 23, 27, 48, 61], "tupl": [16, 20, 21, 22, 25, 26, 27, 28, 29, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 62], "twice": 3, "two": [1, 3, 6, 7, 35, 37], "two_triangl": [8, 38, 57], "txt": [0, 1, 2, 3, 4, 6], "type": [6, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "typevar": [23, 62], "typic": 4, "u": 3, "under": [0, 7, 56, 57], "union": 37, "unix": 0, "until": [11, 12, 60], "up": [1, 3, 6], "updat": 6, "us": [2, 6, 7, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "user": 6, "uv": 5, "v": [16, 62], "v0": 16, "valid": [1, 6], "valu": [29, 61], "variabl": [8, 16, 24, 28], "vc": 16, "vector": 3, "venv": 0, "verbos": 16, "version": 5, "vertex": [3, 5], "vertic": [3, 5], "view": 49, "virtual": 0, "vocabulari": 0, "wa": [1, 3, 6], "wai": [1, 3], "wb": 3, "we": [0, 4, 7, 11, 12], "wedg": [3, 5], "well": [3, 5, 6, 61], "were": 3, "when": [1, 3, 6, 53], "where": [2, 4], "which": [1, 3, 5, 6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "why": [6, 8, 14, 16, 19, 20, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61], "why_col": [8, 19, 22], "why_cycl": [8, 19, 22], "wi": 3, "wide": 6, "widehat": 3, "window": 0, "with_deductive_ag": [8, 17], "with_more_construct": [8, 24, 27], "with_new": [8, 19, 20, 61], "with_runtime_cach": [8, 17], "within": 36, "without": [0, 3], "work": [3, 6], "would": [1, 3], "write": [0, 7, 8, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57], "write_all_output": [8, 17], "write_proof_step": [8, 17, 59], "write_run_info": [8, 17], "written": [1, 6, 7], "wu": 0, "wx": 3, "wy": 3, "x": [36, 37, 54, 55, 62], "xa": 3, "xab": 3, "xac": 3, "xaq": 5, "xb": 3, "xba": 3, "xbc": 3, "xc": 3, "xcb": 3, "xd": 3, "xm": 5, "xn": 5, "xp": 5, "xpb": 5, "xy": 3, "xyz": 5, "y": [36, 43, 54, 55], "yar": 5, "yb": 3, "year": 0, "you": [0, 5], "ypc": 5, "yuhuai": 0, "yx": 3, "z": [54, 55], "zbr": 5, "zcq": 5, "zi": 3, "zo": 3}, "titles": ["GeoSolver: Symbolic solver for Geometric problems", "Adding new problems", "Adding new rules", "Definitions", "Default Files", "Rules", "Overview", "Python interface", "Geosolver", "Agent", "Agents interface", "Breadth first search", "Flemmard", "Human agent", "Algebraic reasoning", "Algebraic manipulator", "Tables", "Api", "Configs", "Dependencies", "Dependency", "Dependency graph", "Symbols", "Symbols graph", "Formulations", "Clause", "Definition", "Problem", "Rule", "Load geogebra", "Match theorems", "Numerical", "Angles", "Check", "Distances", "Draw figure", "Geometries", "Sketch", "Predicates", "Pythagoras", "Circumcenter", "Collinearity", "Congruence", "Constant angle", "Constant length", "Constant ratio", "Cyclic", "Different", "Equal angles", "Equal ratios", "Midpoint", "Parallelism", "Perpendicularity", "Predicate", "Sameclock", "Sameside", "Triangles congruent", "Triangles similar", "Proof", "Proof writing", "Run loop", "Statement", "Tools"], "titleterms": {"": 5, "about": 0, "ad": [1, 2], "agent": [6, 9, 10, 13], "algebra": [14, 15], "alphageometri": 0, "angl": [5, 32, 43, 48], "angle_bisector": 3, "angle_mirror": 3, "api": 17, "b": 3, "base": 5, "bisector": 5, "breadth": 11, "built": [1, 6], "c": 3, "can": 1, "cancel": 5, "center": 5, "centroid": 5, "check": 33, "circl": [3, 5], "circle_eqangle2perp": 5, "circle_midp2eqangl": 5, "circle_perp2eqangl": 5, "circumcent": [3, 5, 40], "claus": 25, "collinear": 41, "config": 18, "cong": 5, "cong_cong2contri": 5, "cong_cyclic2perp": 5, "cong_eqangle2contri": 5, "congruenc": 42, "congruent": 56, "constant": [43, 44, 45], "construct": 5, "content": [0, 4], "contribut": 0, "cyclic": [5, 46], "cyclic2eqangl": 5, "cyclic_para2eqangl": 5, "d": 3, "deduct": 6, "default": 4, "definit": [1, 3, 5, 26], "depend": [19, 20, 21], "diagon": 5, "diamet": 5, "differ": 47, "distanc": 34, "document": 0, "draw": 35, "e": 3, "ensur": 1, "eq_quadrangl": 3, "eq_triangl": 3, "eqangle2": 3, "eqangle2cycl": 5, "eqangle2midp": 5, "eqangle2para": 5, "eqangle2simtri": 5, "eqangle2simtri2": 5, "eqangle_cong2contri": 5, "eqangle_on_circle2cong": 5, "eqangle_perp2perp": 5, "eqdia_quadrangl": 3, "eqdist": 3, "eqratio2angle_bisector": 5, "eqratio62para": 5, "eqratio_cong2cong": 5, "eqratio_eqangle2simtri": 5, "eqratio_eqratio_cong2contri": 5, "eqratio_sameside2para": 5, "equal": [5, 48, 49], "excent": 3, "excenter2": 3, "figur": 35, "file": 4, "first": 11, "flemmard": 12, "foot": 3, "formul": 24, "free": 3, "from": 0, "geogebra": 29, "geometr": 0, "geometri": 36, "geosolv": [0, 8], "give": 5, "graph": [21, 23], "half": 5, "how": 6, "human": 13, "hypotenus": 5, "hypothenus": 5, "i": [3, 5, 6], "impli": 5, "incent": [3, 5], "incenter2": 3, "indic": 0, "instal": 0, "interfac": [7, 10], "intersection_cc": 3, "intersection_l": 3, "intersection_lc": 3, "intersection_lp": 3, "intersection_lt": 3, "iso_trapezoid": 3, "isoscel": 5, "languag": 6, "legaci": [3, 5], "length": 44, "line": 5, "load": 29, "loop": 60, "m": 3, "manipul": 15, "match": 30, "midp2eqratio": 5, "midp2para": 5, "midpoint": [5, 50], "n": 3, "natur": 6, "new": [1, 2, 3, 5], "numer": 31, "o": 3, "orthocent": 5, "overview": 6, "pappu": 5, "para2col": 5, "para2eqratio": 5, "para2eqratio3": 5, "parallel": [5, 51], "parallelogram": 5, "perp_perp2eqangl": 5, "perpendicular": [5, 52], "pip": 0, "predic": [38, 53], "problem": [0, 1, 6, 27], "proof": [6, 58, 59], "pythagora": 39, "python": 7, "quickstart": 0, "r00": 5, "r01": 5, "r02": 5, "r03": 5, "r04": 5, "r05": 5, "r06": 5, "r07": 5, "r08": 5, "r09": 5, "r10": 5, "r11": 5, "r12": 5, "r13": 5, "r14": 5, "r15": 5, "r16": 5, "r17": 5, "r18": 5, "r19": 5, "r20": 5, "r21": 5, "r22": 5, "r23": 5, "r24": 5, "r25": 5, "r26": 5, "r27": 5, "r28": 5, "r29": 5, "r30": 5, "r31": 5, "r32": 5, "r33": 5, "r34": 5, "r35": 5, "r36": 5, "r37": 5, "r38": 5, "r39": 5, "r40": 5, "r41": 5, "r42": 5, "r43": 5, "r44": 5, "r45": 5, "r46": 5, "r47": 5, "r48": 5, "r49": 5, "r50": 5, "r51": 5, "ratio": [5, 45, 49], "reason": 14, "recogn": 5, "rule": [2, 5, 28], "run": 60, "sameclock": 54, "samesid": 55, "search": 11, "similar": 57, "simson": 5, "sketch": 37, "solver": 0, "sourc": 0, "split": 5, "state": 6, "statement": 61, "sum": 5, "symbol": [0, 22, 23], "tabl": [0, 16], "theorem": [5, 30], "tool": 62, "translat": 6, "triangl": [5, 56, 57], "two": 5, "us": [0, 1], "w": 3, "write": [1, 6, 59], "x": 3, "y": 3, "z": 3}})